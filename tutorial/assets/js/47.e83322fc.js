(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{373:function(v,_,t){"use strict";t.r(_);var e=t(15),o=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("blockquote",[_("p",[v._v("作者："),_("a",{attrs:{href:"https://link.juejin.cn?target=",target:"_blank",rel:"noopener noreferrer"}},[v._v("JowayYoung"),_("OutboundLink")],1),_("br"),v._v("\n仓库："),_("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2FJowayYoung",title:"https://github.com/JowayYoung",target:"_blank",rel:"noopener noreferrer"}},[v._v("Github"),_("OutboundLink")],1),v._v("、"),_("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2FJowayYoung",title:"https://codepen.io/JowayYoung",target:"_blank",rel:"noopener noreferrer"}},[v._v("CodePen"),_("OutboundLink")],1),_("br"),v._v("\n博客："),_("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fyangzw.vip",title:"https://yangzw.vip",target:"_blank",rel:"noopener noreferrer"}},[v._v("官网"),_("OutboundLink")],1),v._v("、"),_("a",{attrs:{href:"https://juejin.cn/user/2330620350432110",title:"https://juejin.cn/user/2330620350432110",target:"_blank",rel:"noopener noreferrer"}},[v._v("掘金"),_("OutboundLink")],1),v._v("、"),_("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fsegmentfault.com%2Fblog%2Fjowayyoung",title:"https://segmentfault.com/blog/jowayyoung",target:"_blank",rel:"noopener noreferrer"}},[v._v("思否"),_("OutboundLink")],1),v._v("、"),_("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fc_1169597485852360704",title:"https://zhuanlan.zhihu.com/c_1169597485852360704",target:"_blank",rel:"noopener noreferrer"}},[v._v("知乎"),_("OutboundLink")],1),_("br"),v._v("\n公众号："),_("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fp3-juejin.byteimg.com%2Ftos-cn-i-k3u1fbpfcp%2F0e22770684fe4cdc958a24f92c0c7640~tplv-k3u1fbpfcp-zoom-1.image",title:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0e22770684fe4cdc958a24f92c0c7640~tplv-k3u1fbpfcp-zoom-1.image",target:"_blank",rel:"noopener noreferrer"}},[v._v("IQ前端"),_("OutboundLink")],1),_("br"),v._v("\n特别声明：原创不易，未经授权不得转载或抄袭，如需转载可联系笔者授权")])]),v._v(" "),_("h3",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),_("p",[v._v("第三次阅读阮一峰老师的"),_("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fes6.ruanyifeng.com",title:"https://es6.ruanyifeng.com",target:"_blank",rel:"noopener noreferrer"}},[v._v("《ES6标准入门》"),_("OutboundLink")],1),v._v("了，以前阅读时不细心，很多地方都是一目十行。最近这次阅读都是逐个逐个字来读，发现很多以前都没有注意到的知识点，为了方便记忆和预览"),_("code",[v._v("全部ES6特性")]),v._v("，所以写下本文。")]),v._v(" "),_("div",{staticClass:"language-txt extra-class"},[_("pre",{pre:!0,attrs:{class:"language-txt"}},[_("code",[v._v("以下提到的《ES6标准入门》统一使用《ES6》这个名称来代替，而最新的ES6版本也是截止到当前的ES2020\n复制代码\n")])])]),_("p",[v._v("本文的知识点完全是参考或摘录"),_("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fes6.ruanyifeng.com",title:"https://es6.ruanyifeng.com",target:"_blank",rel:"noopener noreferrer"}},[v._v("《ES6》"),_("OutboundLink")],1),v._v("里的语句，有部分语句为了方便理解和记忆，进行了相同意思的转义，同时对知识点进行归类划分。为了让大家能集中精力来记住这些特性，全文一句废话和题外话都没有，全部模块以笔记的形式进行书写，如果看得不是很惯建议对照"),_("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fes6.ruanyifeng.com",title:"https://es6.ruanyifeng.com",target:"_blank",rel:"noopener noreferrer"}},[v._v("《ES6》"),_("OutboundLink")],1),v._v("的内容来学习。")]),v._v(" "),_("p",[v._v("本文整理出来的笔记都是书中的精华内容，囊括了整个"),_("code",[v._v("ES6体系")]),v._v("的所有特性，非常方便大家重新认识"),_("code",[v._v("全部ES6特性")]),v._v("。半小时的阅读就可对"),_("code",[v._v("ES6")]),v._v("有一个全面的了解，可认为是一本"),_("code",[v._v("ES6特性小字典")]),v._v("，收藏后可随时查阅。即使看不完也要拉到本文末尾喔，有个大彩蛋，嘻嘻！")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f623a94c2f6f4cbeb46b1e8d66e75186~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image",alt:"ES6缩略"}})]),v._v(" "),_("h3",{attrs:{id:"修正"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#修正"}},[v._v("#")]),v._v(" 修正")]),v._v(" "),_("p",[_("strong",[v._v("ES6")]),v._v("是"),_("code",[v._v("ECMA")]),v._v("为"),_("code",[v._v("JavaScript")]),v._v("制定的第6个标准版本，相关历史可查看此章节"),_("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fes6.ruanyifeng.com%2F%23docs%2Fintro",title:"https://es6.ruanyifeng.com/#docs/intro",target:"_blank",rel:"noopener noreferrer"}},[v._v("《ES6-ECMAScript6简介》"),_("OutboundLink")],1),v._v("。")]),v._v(" "),_("p",[v._v("标准委员会最终决定，标准在每年6月正式发布并作为当年的正式版本，接下来的时间里就在此版本的基础上进行改动，直到下一年6月草案就自然变成新一年的版本，这样一来就无需以前的版本号，只要用年份标记即可。"),_("code",[v._v("ECMAscript 2015")]),v._v("是在"),_("code",[v._v("2015年6月")]),v._v("发布ES6的第一个版本。以此类推，"),_("code",[v._v("ECMAscript 2016")]),v._v("是ES6的第二个版本、 "),_("code",[v._v("ECMAscript 2017")]),v._v("是ES6的第三个版本。"),_("strong",[v._v("ES6")]),v._v("既是一个历史名词也是一个泛指，含义是"),_("code",[v._v("5.1版本")]),v._v("以后的"),_("code",[v._v("JavaScript下一代标准")]),v._v("，目前涵盖了"),_("code",[v._v("ES2015")]),v._v("、"),_("code",[v._v("ES2016")]),v._v("、"),_("code",[v._v("ES2017")]),v._v("、"),_("code",[v._v("ES2018")]),v._v("、"),_("code",[v._v("ES2019")]),v._v("、"),_("code",[v._v("ES2020")]),v._v("。")]),v._v(" "),_("p",[v._v("所以有些文章上提到的"),_("code",[v._v("ES7")]),v._v("(实质上是"),_("code",[v._v("ES2016")]),v._v(")、"),_("code",[v._v("ES8")]),v._v("(实质上是"),_("code",[v._v("ES2017")]),v._v(")、"),_("code",[v._v("ES9")]),v._v("(实质上是"),_("code",[v._v("ES2018")]),v._v(")、"),_("code",[v._v("ES10")]),v._v("(实质上是"),_("code",[v._v("ES2019")]),v._v(")、"),_("code",[v._v("ES11")]),v._v("(实质上是"),_("code",[v._v("ES2020")]),v._v(")，实质上都是一些不规范的概念。从ES1到ES6，每个标准都是花了好几年甚至十多年才制定下来，你一个ES6到ES7，ES7到ES8，才用了一年，按照这样的定义下去，那不是很快就ES20了。用正确的概念来说ES6目前涵盖了"),_("strong",[v._v("ES2015")]),v._v("、"),_("strong",[v._v("ES2016")]),v._v("、"),_("strong",[v._v("ES2017")]),v._v("、"),_("strong",[v._v("ES2018")]),v._v("、"),_("strong",[v._v("ES2019")]),v._v("、"),_("strong",[v._v("ES2020")]),v._v("。")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/05ab15ecbcc6402ebfd7ecd8e1a321be~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image",alt:"ES6组成"}})]),v._v(" "),_("p",[v._v("另外，ES6更新的内容主要分为以下几点")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("表达式")]),v._v("：声明、解构赋值")]),v._v(" "),_("li",[_("strong",[v._v("内置对象")]),v._v("：字符串扩展、数值扩展、对象扩展、数组扩展、函数扩展、正则扩展、Symbol、Set、Map、Proxy、Reflect")]),v._v(" "),_("li",[_("strong",[v._v("语句与运算")]),v._v("：Class、Module、Iterator")]),v._v(" "),_("li",[_("strong",[v._v("异步编程")]),v._v("：Promise、Generator、Async")])]),v._v(" "),_("h2",{attrs:{id:"es2015"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es2015"}},[v._v("#")]),v._v(" ES2015")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f33aa40c8da041b19a6608d4a335f6b4~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image",alt:"ES2015"}})]),v._v(" "),_("h3",{attrs:{id:"声明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#声明"}},[v._v("#")]),v._v(" 声明")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("const命令")]),v._v("：声明常量")]),v._v(" "),_("li",[_("strong",[v._v("let命令")]),v._v("：声明变量")])]),v._v(" "),_("blockquote",[_("p",[v._v("作用")])]),v._v(" "),_("ul",[_("li",[v._v("作用域\n"),_("ul",[_("li",[_("strong",[v._v("全局作用域")])]),v._v(" "),_("li",[_("strong",[v._v("函数作用域")]),v._v("："),_("code",[v._v("function() {}")])]),v._v(" "),_("li",[_("strong",[v._v("块级作用域")]),v._v("："),_("code",[v._v("{}")])])])]),v._v(" "),_("li",[v._v("作用范围\n"),_("ul",[_("li",[_("code",[v._v("var命令")]),v._v("在全局代码中执行")]),v._v(" "),_("li",[_("code",[v._v("const命令")]),v._v("和"),_("code",[v._v("let命令")]),v._v("只能在代码块中执行")])])]),v._v(" "),_("li",[v._v("赋值使用\n"),_("ul",[_("li",[_("code",[v._v("const命令")]),v._v("声明常量后必须立马赋值")]),v._v(" "),_("li",[_("code",[v._v("let命令")]),v._v("声明变量后可立马赋值或使用时赋值")])])]),v._v(" "),_("li",[v._v("声明方法："),_("code",[v._v("var")]),v._v("、"),_("code",[v._v("const")]),v._v("、"),_("code",[v._v("let")]),v._v("、"),_("code",[v._v("function")]),v._v("、"),_("code",[v._v("class")]),v._v("、"),_("code",[v._v("import")])])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("不允许重复声明")]),v._v(" "),_("li",[v._v("未定义就使用会报错："),_("code",[v._v("const命令")]),v._v("和"),_("code",[v._v("let命令")]),v._v("不存在变量提升")]),v._v(" "),_("li",[v._v("暂时性死区：在代码块内使用"),_("code",[v._v("const命令")]),v._v("和"),_("code",[v._v("let命令")]),v._v("声明变量之前，该变量都不可用")])]),v._v(" "),_("h3",{attrs:{id:"解构赋值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值"}},[v._v("#")]),v._v(" 解构赋值")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("字符串解构")]),v._v("："),_("code",[v._v('const [a, b, c, d, e] = "hello"')])]),v._v(" "),_("li",[_("strong",[v._v("数值解构")]),v._v("："),_("code",[v._v("const { toString: s } = 123")])]),v._v(" "),_("li",[_("strong",[v._v("布尔解构")]),v._v("："),_("code",[v._v("const { toString: b } = true")])]),v._v(" "),_("li",[_("strong",[v._v("对象解构")])]),v._v(" "),_("li",[v._v("形式："),_("code",[v._v("const { x, y } = { x: 1, y: 2 }")])]),v._v(" "),_("li",[v._v("默认："),_("code",[v._v("const { x, y = 2 } = { x: 1 }")])]),v._v(" "),_("li",[v._v("改名："),_("code",[v._v("const { x, y: z } = { x: 1, y: 2 }")])]),v._v(" "),_("li",[_("strong",[v._v("数组解构")])]),v._v(" "),_("li",[v._v("规则：数据结构具有"),_("code",[v._v("Iterator接口")]),v._v("可采用数组形式的解构赋值")]),v._v(" "),_("li",[v._v("形式："),_("code",[v._v("const [x, y] = [1, 2]")])]),v._v(" "),_("li",[v._v("默认："),_("code",[v._v("const [x, y = 2] = [1]")])]),v._v(" "),_("li",[_("strong",[v._v("函数参数解构")])]),v._v(" "),_("li",[v._v("数组解构："),_("code",[v._v("function Func([x = 0, y = 1]) {}")])]),v._v(" "),_("li",[v._v("对象解构："),_("code",[v._v("function Func({ x = 0, y = 1 } = {}) {}")])])]),v._v(" "),_("blockquote",[_("p",[v._v("应用场景")])]),v._v(" "),_("ul",[_("li",[v._v("交换变量值："),_("code",[v._v("[x, y] = [y, x]")])]),v._v(" "),_("li",[v._v("返回函数多个值："),_("code",[v._v("const [x, y, z] = Func()")])]),v._v(" "),_("li",[v._v("定义函数参数："),_("code",[v._v("Func([1, 2])")])]),v._v(" "),_("li",[v._v("提取JSON数据："),_("code",[v._v("const { name, version } = packageJson")])]),v._v(" "),_("li",[v._v("定义函数参数默认值："),_("code",[v._v("function Func({ x = 1, y = 2 } = {}) {}")])]),v._v(" "),_("li",[v._v("遍历Map结构："),_("code",[v._v("for (let [k, v] of Map) {}")])]),v._v(" "),_("li",[v._v("输入模块指定属性和方法："),_("code",[v._v('const { readFile, writeFile } = require("fs")')])])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("匹配模式：只要等号两边的模式相同，左边的变量就会被赋予对应的值")]),v._v(" "),_("li",[v._v("解构赋值规则：只要等号右边的值不是对象或数组，就先将其转为对象")]),v._v(" "),_("li",[v._v("解构默认值生效条件：属性值严格等于"),_("code",[v._v("undefined")])]),v._v(" "),_("li",[v._v("解构遵循匹配模式")]),v._v(" "),_("li",[v._v("解构不成功时变量的值等于"),_("code",[v._v("undefined")])]),v._v(" "),_("li",[_("code",[v._v("undefined")]),v._v("和"),_("code",[v._v("null")]),v._v("无法转为对象，因此无法进行解构")])]),v._v(" "),_("h3",{attrs:{id:"字符串扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串扩展"}},[v._v("#")]),v._v(" 字符串扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("Unicode表示法")]),v._v("："),_("code",[v._v("大括号包含")]),v._v("表示Unicode字符("),_("code",[v._v("\\u{0xXX}")]),v._v("或"),_("code",[v._v("\\u{0XXX}")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("字符串遍历")]),v._v("：可通过"),_("code",[v._v("for-of")]),v._v("遍历字符串")]),v._v(" "),_("li",[_("strong",[v._v("字符串模板")]),v._v("：可单行可多行可插入变量的增强版字符串")]),v._v(" "),_("li",[_("strong",[v._v("标签模板")]),v._v("：函数参数的特殊调用")]),v._v(" "),_("li",[_("strong",[v._v("String.raw()")]),v._v("：返回把字符串所有变量替换且对斜杠进行转义的结果")]),v._v(" "),_("li",[_("strong",[v._v("String.fromCodePoint()")]),v._v("：返回码点对应字符")]),v._v(" "),_("li",[_("strong",[v._v("codePointAt()")]),v._v("：返回字符对应码点("),_("code",[v._v("String.fromCodePoint()")]),v._v("的逆操作)")]),v._v(" "),_("li",[_("strong",[v._v("normalize()")]),v._v("：把字符的不同表示方法统一为同样形式，返回"),_("code",[v._v("新字符串")]),v._v("(Unicode正规化)")]),v._v(" "),_("li",[_("strong",[v._v("repeat()")]),v._v("：把字符串重复n次，返回"),_("code",[v._v("新字符串")])]),v._v(" "),_("li",[_("strong",[v._v("matchAll()")]),v._v("：返回正则表达式在字符串的所有匹配")]),v._v(" "),_("li",[_("strong",[v._v("includes()")]),v._v("：是否存在指定字符串")]),v._v(" "),_("li",[_("strong",[v._v("startsWith()")]),v._v("：是否存在字符串头部指定字符串")]),v._v(" "),_("li",[_("strong",[v._v("endsWith()")]),v._v("：是否存在字符串尾部指定字符串")])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("以上扩展方法均可作用于由"),_("code",[v._v("4个字节储存")]),v._v("的"),_("code",[v._v("Unicode字符")]),v._v("上")])]),v._v(" "),_("h3",{attrs:{id:"数值扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数值扩展"}},[v._v("#")]),v._v(" 数值扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("二进制表示法")]),v._v("："),_("code",[v._v("0b或0B开头")]),v._v("表示二进制("),_("code",[v._v("0bXX")]),v._v("或"),_("code",[v._v("0BXX")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("八进制表示法")]),v._v("："),_("code",[v._v("0o或0O开头")]),v._v("表示二进制("),_("code",[v._v("0oXX")]),v._v("或"),_("code",[v._v("0OXX")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("Number.EPSILON")]),v._v("：数值最小精度")]),v._v(" "),_("li",[_("strong",[v._v("Number.MIN_SAFE_INTEGER")]),v._v("：最小安全数值("),_("code",[v._v("-2^53")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("Number.MAX_SAFE_INTEGER")]),v._v("：最大安全数值("),_("code",[v._v("2^53")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("Number.parseInt()")]),v._v("：返回转换值的整数部分")]),v._v(" "),_("li",[_("strong",[v._v("Number.parseFloat()")]),v._v("：返回转换值的浮点数部分")]),v._v(" "),_("li",[_("strong",[v._v("Number.isFinite()")]),v._v("：是否为有限数值")]),v._v(" "),_("li",[_("strong",[v._v("Number.isNaN()")]),v._v("：是否为NaN")]),v._v(" "),_("li",[_("strong",[v._v("Number.isInteger()")]),v._v("：是否为整数")]),v._v(" "),_("li",[_("strong",[v._v("Number.isSafeInteger()")]),v._v("：是否在数值安全范围内")]),v._v(" "),_("li",[_("strong",[v._v("Math.trunc()")]),v._v("：返回数值整数部分")]),v._v(" "),_("li",[_("strong",[v._v("Math.sign()")]),v._v("：返回数值类型("),_("code",[v._v("正数1")]),v._v("、"),_("code",[v._v("负数-1")]),v._v("、"),_("code",[v._v("零0")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("Math.cbrt()")]),v._v("：返回数值立方根")]),v._v(" "),_("li",[_("strong",[v._v("Math.clz32()")]),v._v("：返回数值的32位无符号整数形式")]),v._v(" "),_("li",[_("strong",[v._v("Math.imul()")]),v._v("：返回两个数值相乘")]),v._v(" "),_("li",[_("strong",[v._v("Math.fround()")]),v._v("：返回数值的32位单精度浮点数形式")]),v._v(" "),_("li",[_("strong",[v._v("Math.hypot()")]),v._v("：返回所有数值平方和的平方根")]),v._v(" "),_("li",[_("strong",[v._v("Math.expm1()")]),v._v("：返回"),_("code",[v._v("e^n - 1")])]),v._v(" "),_("li",[_("strong",[v._v("Math.log1p()")]),v._v("：返回"),_("code",[v._v("1 + n")]),v._v("的自然对数("),_("code",[v._v("Math.log(1 + n)")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("Math.log10()")]),v._v("：返回以10为底的n的对数")]),v._v(" "),_("li",[_("strong",[v._v("Math.log2()")]),v._v("：返回以2为底的n的对数")]),v._v(" "),_("li",[_("strong",[v._v("Math.sinh()")]),v._v("：返回n的双曲正弦")]),v._v(" "),_("li",[_("strong",[v._v("Math.cosh()")]),v._v("：返回n的双曲余弦")]),v._v(" "),_("li",[_("strong",[v._v("Math.tanh()")]),v._v("：返回n的双曲正切")]),v._v(" "),_("li",[_("strong",[v._v("Math.asinh()")]),v._v("：返回n的反双曲正弦")]),v._v(" "),_("li",[_("strong",[v._v("Math.acosh()")]),v._v("：返回n的反双曲余弦")]),v._v(" "),_("li",[_("strong",[v._v("Math.atanh()")]),v._v("：返回n的反双曲正切")])]),v._v(" "),_("h3",{attrs:{id:"对象扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象扩展"}},[v._v("#")]),v._v(" 对象扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("简洁表示法")]),v._v("：直接写入变量和函数作为对象的属性和方法("),_("code",[v._v("{ prop, method() {} }")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("属性名表达式")]),v._v("：字面量定义对象时使用"),_("code",[v._v("[]")]),v._v("定义键("),_("code",[v._v("[prop]")]),v._v("，不能与上同时使用)")]),v._v(" "),_("li",[_("strong",[v._v("方法的name属性")]),v._v("：返回方法函数名")]),v._v(" "),_("li",[v._v("取值函数(getter)和存值函数(setter)："),_("code",[v._v("get/set 函数名")]),v._v("(属性的描述对象在"),_("code",[v._v("get")]),v._v("和"),_("code",[v._v("set")]),v._v("上)")]),v._v(" "),_("li",[v._v("bind返回的函数："),_("code",[v._v("bound 函数名")])]),v._v(" "),_("li",[v._v("Function构造函数返回的函数实例："),_("code",[v._v("anonymous")])]),v._v(" "),_("li",[_("strong",[v._v("属性的可枚举性和遍历")]),v._v("：描述对象的"),_("code",[v._v("enumerable")])]),v._v(" "),_("li",[_("strong",[v._v("super关键字")]),v._v("：指向当前对象的原型对象(只能用在对象的简写方法中"),_("code",[v._v("method() {}")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("Object.is()")]),v._v("：对比两值是否相等")]),v._v(" "),_("li",[_("strong",[v._v("Object.assign()")]),v._v("：合并对象(浅拷贝)，返回原对象")]),v._v(" "),_("li",[_("strong",[v._v("Object.getPrototypeOf()")]),v._v("：返回对象的原型对象")]),v._v(" "),_("li",[_("strong",[v._v("Object.setPrototypeOf()")]),v._v("：设置对象的原型对象")]),v._v(" "),_("li",[_("strong",[v._v("__proto__")]),v._v("：返回或设置对象的原型对象")])]),v._v(" "),_("blockquote",[_("p",[v._v("属性遍历")])]),v._v(" "),_("ul",[_("li",[v._v("描述："),_("code",[v._v("自身")]),v._v("、"),_("code",[v._v("可继承")]),v._v("、"),_("code",[v._v("可枚举")]),v._v("、"),_("code",[v._v("非枚举")]),v._v("、"),_("code",[v._v("Symbol")])]),v._v(" "),_("li",[v._v("遍历\n"),_("ul",[_("li",[_("code",[v._v("for-in")]),v._v("：遍历对象"),_("code",[v._v("自身可继承可枚举")]),v._v("属性")]),v._v(" "),_("li",[_("code",[v._v("Object.keys()")]),v._v("：返回对象"),_("code",[v._v("自身可枚举")]),v._v("属性键组成的数组")]),v._v(" "),_("li",[_("code",[v._v("Object.getOwnPropertyNames()")]),v._v("：返回对象"),_("code",[v._v("自身非Symbol")]),v._v("属性键组成的数组")]),v._v(" "),_("li",[_("code",[v._v("Object.getOwnPropertySymbols()")]),v._v("：返回对象"),_("code",[v._v("自身Symbol")]),v._v("属性键组成的数组")]),v._v(" "),_("li",[_("code",[v._v("Reflect.ownKeys()")]),v._v("：返回对象"),_("code",[v._v("自身全部")]),v._v("属性键组成的数组")])])]),v._v(" "),_("li",[v._v("规则\n"),_("ul",[_("li",[v._v("首先遍历所有数值键，按照数值升序排列")]),v._v(" "),_("li",[v._v("其次遍历所有字符串键，按照加入时间升序排列")]),v._v(" "),_("li",[v._v("最后遍历所有Symbol键，按照加入时间升序排列")])])])]),v._v(" "),_("h3",{attrs:{id:"数组扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组扩展"}},[v._v("#")]),v._v(" 数组扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("扩展运算符(...)")]),v._v("：转换数组为用逗号分隔的参数序列("),_("code",[v._v("[...arr]")]),v._v("，相当于"),_("code",[v._v("rest/spread参数")]),v._v("的逆运算)")]),v._v(" "),_("li",[_("strong",[v._v("Array.from()")]),v._v("：转换具有"),_("code",[v._v("Iterator接口")]),v._v("的数据结构为真正数组，返回新数组")]),v._v(" "),_("li",[v._v("类数组对象："),_("code",[v._v("包含length的对象")]),v._v("、"),_("code",[v._v("Arguments对象")]),v._v("、"),_("code",[v._v("NodeList对象")])]),v._v(" "),_("li",[v._v("可遍历对象："),_("code",[v._v("String")]),v._v("、"),_("code",[v._v("Set结构")]),v._v("、"),_("code",[v._v("Map结构")]),v._v("、"),_("code",[v._v("Generator函数")])]),v._v(" "),_("li",[_("strong",[v._v("Array.of()")]),v._v("：转换一组值为真正数组，返回新数组")]),v._v(" "),_("li",[_("strong",[v._v("copyWithin()")]),v._v("：把指定位置的成员复制到其他位置，返回原数组")]),v._v(" "),_("li",[_("strong",[v._v("find()")]),v._v("：返回第一个符合条件的成员")]),v._v(" "),_("li",[_("strong",[v._v("findIndex()")]),v._v("：返回第一个符合条件的成员索引值")]),v._v(" "),_("li",[_("strong",[v._v("fill()")]),v._v("：根据指定值填充整个数组，返回原数组")]),v._v(" "),_("li",[_("strong",[v._v("keys()")]),v._v("：返回以索引值为遍历器的对象")]),v._v(" "),_("li",[_("strong",[v._v("values()")]),v._v("：返回以属性值为遍历器的对象")]),v._v(" "),_("li",[_("strong",[v._v("entries()")]),v._v("：返回以索引值和属性值为遍历器的对象")]),v._v(" "),_("li",[_("strong",[v._v("数组空位")]),v._v("：ES6明确将数组空位转为"),_("code",[v._v("undefined")]),v._v("(空位处理规不一，建议避免出现)")])]),v._v(" "),_("blockquote",[_("p",[v._v("扩展应用")])]),v._v(" "),_("ul",[_("li",[v._v("克隆数组："),_("code",[v._v("const arr = [...arr1]")])]),v._v(" "),_("li",[v._v("合并数组："),_("code",[v._v("const arr = [...arr1, ...arr2]")])]),v._v(" "),_("li",[v._v("拼接数组："),_("code",[v._v("arr.push(...arr1)")])]),v._v(" "),_("li",[v._v("代替apply："),_("code",[v._v("Math.max.apply(null, [x, y])")]),v._v(" => "),_("code",[v._v("Math.max(...[x, y])")])]),v._v(" "),_("li",[v._v("转换字符串为数组："),_("code",[v._v('[..."hello"]')])]),v._v(" "),_("li",[v._v("转换类数组对象为数组："),_("code",[v._v("[...Arguments, ...NodeList]")])]),v._v(" "),_("li",[v._v("转换可遍历对象为数组："),_("code",[v._v("[...String, ...Set, ...Map, ...Generator]")])]),v._v(" "),_("li",[v._v("与数组解构赋值结合："),_("code",[v._v("const [x, ...rest/spread] = [1, 2, 3]")])]),v._v(" "),_("li",[v._v("计算Unicode字符长度："),_("code",[v._v('Array.from("hello").length')]),v._v(" => "),_("code",[v._v('[..."hello"].length')])])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("使用"),_("code",[v._v("keys()")]),v._v("、"),_("code",[v._v("values()")]),v._v("、"),_("code",[v._v("entries()")]),v._v("返回的遍历器对象，可用"),_("code",[v._v("for-of")]),v._v("自动遍历或"),_("code",[v._v("next()")]),v._v("手动遍历")])]),v._v(" "),_("h3",{attrs:{id:"函数扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数扩展"}},[v._v("#")]),v._v(" 函数扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("参数默认值")]),v._v("：为函数参数指定默认值")]),v._v(" "),_("li",[v._v("形式："),_("code",[v._v("function Func(x = 1, y = 2) {}")])]),v._v(" "),_("li",[v._v("参数赋值：惰性求值(函数调用后才求值)")]),v._v(" "),_("li",[v._v("参数位置：尾参数")]),v._v(" "),_("li",[v._v("参数作用域：函数作用域")]),v._v(" "),_("li",[v._v("声明方式：默认声明，不能用"),_("code",[v._v("const")]),v._v("或"),_("code",[v._v("let")]),v._v("再次声明")]),v._v(" "),_("li",[v._v("length：返回没有指定默认值的参数个数")]),v._v(" "),_("li",[v._v("与解构赋值默认值结合："),_("code",[v._v("function Func({ x = 1, y = 2 } = {}) {}")])]),v._v(" "),_("li",[v._v("应用\n"),_("ul",[_("li",[v._v("指定某个参数不得省略，省略即抛出错误："),_("code",[v._v("function Func(x = throwMissing()) {}")])]),v._v(" "),_("li",[v._v("将参数默认值设为"),_("code",[v._v("undefined")]),v._v("，表明此参数可省略："),_("code",[v._v("Func(undefined, 1)")])])])]),v._v(" "),_("li",[_("strong",[v._v("rest/spread参数(...)")]),v._v("：返回函数多余参数")]),v._v(" "),_("li",[v._v("形式：以数组的形式存在，之后不能再有其他参数")]),v._v(" "),_("li",[v._v("作用：代替"),_("code",[v._v("Arguments对象")])]),v._v(" "),_("li",[v._v("length：返回没有指定默认值的参数个数但不包括"),_("code",[v._v("rest/spread参数")])]),v._v(" "),_("li",[_("strong",[v._v("严格模式")]),v._v("：在严格条件下运行JS")]),v._v(" "),_("li",[v._v("应用：只要函数参数使用默认值、解构赋值、扩展运算符，那么函数内部就不能显式设定为严格模式")]),v._v(" "),_("li",[_("strong",[v._v("name属性")]),v._v("：返回函数的函数名")]),v._v(" "),_("li",[v._v("将匿名函数赋值给变量："),_("code",[v._v("空字符串")]),v._v("("),_("strong",[v._v("ES5")]),v._v(")、"),_("code",[v._v("变量名")]),v._v("("),_("strong",[v._v("ES6")]),v._v(")")]),v._v(" "),_("li",[v._v("将具名函数赋值给变量："),_("code",[v._v("函数名")]),v._v("("),_("strong",[v._v("ES5和ES6")]),v._v(")")]),v._v(" "),_("li",[v._v("bind返回的函数："),_("code",[v._v("bound 函数名")]),v._v("("),_("strong",[v._v("ES5和ES6")]),v._v(")")]),v._v(" "),_("li",[v._v("Function构造函数返回的函数实例："),_("code",[v._v("anonymous")]),v._v("("),_("strong",[v._v("ES5和ES6")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("箭头函数(=>)")]),v._v("：函数简写")]),v._v(" "),_("li",[v._v("无参数："),_("code",[v._v("() => {}")])]),v._v(" "),_("li",[v._v("单个参数："),_("code",[v._v("x => {}")])]),v._v(" "),_("li",[v._v("多个参数："),_("code",[v._v("(x, y) => {}")])]),v._v(" "),_("li",[v._v("解构参数："),_("code",[v._v("({x, y}) => {}")])]),v._v(" "),_("li",[v._v("嵌套使用：部署管道机制")]),v._v(" "),_("li",[v._v("this指向固定化\n"),_("ul",[_("li",[v._v("并非因为内部有绑定"),_("code",[v._v("this")]),v._v("的机制，而是根本没有自己的"),_("code",[v._v("this")]),v._v("，导致内部的"),_("code",[v._v("this")]),v._v("就是外层代码块的"),_("code",[v._v("this")])]),v._v(" "),_("li",[v._v("因为没有"),_("code",[v._v("this")]),v._v("，因此不能用作构造函数")])])]),v._v(" "),_("li",[_("strong",[v._v("尾调用优化")]),v._v("：只保留内层函数的调用帧")]),v._v(" "),_("li",[v._v("尾调用\n"),_("ul",[_("li",[v._v("定义：某个函数的最后一步是调用另一个函数")]),v._v(" "),_("li",[v._v("形式："),_("code",[v._v("function f(x) { return g(x); }")])])])]),v._v(" "),_("li",[v._v("尾递归\n"),_("ul",[_("li",[v._v("定义：函数尾调用自身")]),v._v(" "),_("li",[v._v("作用：只要使用尾递归就不会发生栈溢出，相对节省内存")]),v._v(" "),_("li",[v._v("实现：把所有用到的内部变量改写成函数的参数并使用参数默认值")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("箭头函数误区")])]),v._v(" "),_("ul",[_("li",[v._v("函数体内的"),_("code",[v._v("this")]),v._v("是"),_("code",[v._v("定义时所在的对象")]),v._v("而不是"),_("code",[v._v("使用时所在的对象")])]),v._v(" "),_("li",[v._v("可让"),_("code",[v._v("this")]),v._v("指向固定化，这种特性很有利于封装回调函数")]),v._v(" "),_("li",[v._v("不可当作"),_("code",[v._v("构造函数")]),v._v("，因此箭头函数不可使用"),_("code",[v._v("new命令")])]),v._v(" "),_("li",[v._v("不可使用"),_("code",[v._v("yield命令")]),v._v("，因此箭头函数不能用作"),_("code",[v._v("Generator函数")])]),v._v(" "),_("li",[v._v("不可使用"),_("code",[v._v("Arguments对象")]),v._v("，此对象在函数体内不存在(可用"),_("code",[v._v("rest/spread参数")]),v._v("代替)")]),v._v(" "),_("li",[v._v("返回对象时必须在对象外面加上括号")])]),v._v(" "),_("h3",{attrs:{id:"正则扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正则扩展"}},[v._v("#")]),v._v(" 正则扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("变更RegExp构造函数入参")]),v._v("：允许首参数为"),_("code",[v._v("正则对象")]),v._v("，尾参数为"),_("code",[v._v("正则修饰符")]),v._v("(返回的正则表达式会忽略原正则表达式的修饰符)")]),v._v(" "),_("li",[_("strong",[v._v("正则方法调用变更")]),v._v("：字符串对象的"),_("code",[v._v("match()")]),v._v("、"),_("code",[v._v("replace()")]),v._v("、"),_("code",[v._v("search()")]),v._v("、"),_("code",[v._v("split()")]),v._v("内部调用转为调用"),_("code",[v._v("RegExp")]),v._v("实例对应的"),_("code",[v._v("RegExp.prototype[Symbol.方法]")])]),v._v(" "),_("li",[_("strong",[v._v("u修饰符")]),v._v("：Unicode模式修饰符，正确处理大于"),_("code",[v._v("\\uFFFF")]),v._v("的"),_("code",[v._v("Unicode字符")])]),v._v(" "),_("li",[_("code",[v._v("点字符")]),v._v("(.)")]),v._v(" "),_("li",[_("code",[v._v("Unicode表示法")])]),v._v(" "),_("li",[_("code",[v._v("量词")])]),v._v(" "),_("li",[_("code",[v._v("预定义模式")])]),v._v(" "),_("li",[_("code",[v._v("i修饰符")])]),v._v(" "),_("li",[_("code",[v._v("转义")])]),v._v(" "),_("li",[_("strong",[v._v("y修饰符")]),v._v("：粘连修饰符，确保匹配必须从剩余的第一个位置开始全局匹配(与"),_("code",[v._v("g修饰符")]),v._v("作用类似)")]),v._v(" "),_("li",[_("strong",[v._v("unicode")]),v._v("：是否设置"),_("code",[v._v("u修饰符")])]),v._v(" "),_("li",[_("strong",[v._v("sticky")]),v._v("：是否设置"),_("code",[v._v("y修饰符")])]),v._v(" "),_("li",[_("strong",[v._v("flags")]),v._v("：返回正则表达式的修饰符")])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("y修饰符")]),v._v("隐含头部匹配标志"),_("code",[v._v("^")])]),v._v(" "),_("li",[v._v("单单一个"),_("code",[v._v("y修饰符")]),v._v("对"),_("code",[v._v("match()")]),v._v("只能返回第一个匹配，必须与"),_("code",[v._v("g修饰符")]),v._v("联用才能返回所有匹配")])]),v._v(" "),_("h3",{attrs:{id:"symbol"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#symbol"}},[v._v("#")]),v._v(" Symbol")]),v._v(" "),_("ul",[_("li",[v._v("定义：独一无二的值")]),v._v(" "),_("li",[v._v("声明："),_("code",[v._v("const set = Symbol(str)")])]),v._v(" "),_("li",[v._v("入参：字符串(可选)")]),v._v(" "),_("li",[v._v("方法\n"),_("ul",[_("li",[_("strong",[v._v("Symbol()")]),v._v("：创建以参数作为描述的"),_("code",[v._v("Symbol值")]),v._v("(不登记在全局环境)")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.for()")]),v._v("：创建以参数作为描述的"),_("code",[v._v("Symbol值")]),v._v("，如存在此参数则返回原有的"),_("code",[v._v("Symbol值")]),v._v("(先搜索后创建，登记在全局环境)")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.keyFor()")]),v._v("：返回已登记的"),_("code",[v._v("Symbol值")]),v._v("的描述(只能返回"),_("code",[v._v("Symbol.for()")]),v._v("的"),_("code",[v._v("key")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("Object.getOwnPropertySymbols()")]),v._v("：返回对象中所有用作属性名的"),_("code",[v._v("Symbol值")]),v._v("的数组")])])]),v._v(" "),_("li",[v._v("内置\n"),_("ul",[_("li",[_("strong",[v._v("Symbol.hasInstance")]),v._v("：指向一个内部方法，当其他对象使用"),_("code",[v._v("instanceof运算符")]),v._v("判断是否为此对象的实例时会调用此方法")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.isConcatSpreadable")]),v._v("：指向一个布尔，定义对象用于"),_("code",[v._v("Array.prototype.concat()")]),v._v("时是否可展开")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.species")]),v._v("：指向一个构造函数，当实例对象使用自身构造函数时会调用指定的构造函数")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.match")]),v._v("：指向一个函数，当实例对象被"),_("code",[v._v("String.prototype.match()")]),v._v("调用时会重新定义"),_("code",[v._v("match()")]),v._v("的行为")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.replace")]),v._v("：指向一个函数，当实例对象被"),_("code",[v._v("String.prototype.replace()")]),v._v("调用时会重新定义"),_("code",[v._v("replace()")]),v._v("的行为")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.search")]),v._v("：指向一个函数，当实例对象被"),_("code",[v._v("String.prototype.search()")]),v._v("调用时会重新定义"),_("code",[v._v("search()")]),v._v("的行为")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.split")]),v._v("：指向一个函数，当实例对象被"),_("code",[v._v("String.prototype.split()")]),v._v("调用时会重新定义"),_("code",[v._v("split()")]),v._v("的行为")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.iterator")]),v._v("：指向一个默认遍历器方法，当实例对象执行"),_("code",[v._v("for-of")]),v._v("时会调用指定的默认遍历器")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.toPrimitive")]),v._v("：指向一个函数，当实例对象被转为原始类型的值时会返回此对象对应的原始类型值")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.toStringTag")]),v._v("：指向一个函数，当实例对象被"),_("code",[v._v("Object.prototype.toString()")]),v._v("调用时其返回值会出现在"),_("code",[v._v("toString()")]),v._v("返回的字符串之中表示对象的类型")]),v._v(" "),_("li",[_("strong",[v._v("Symbol.unscopables")]),v._v("：指向一个对象，指定使用"),_("code",[v._v("with")]),v._v("时哪些属性会被"),_("code",[v._v("with环境")]),v._v("排除")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("数据类型")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("Undefined")])]),v._v(" "),_("li",[_("strong",[v._v("Null")])]),v._v(" "),_("li",[_("strong",[v._v("String")])]),v._v(" "),_("li",[_("strong",[v._v("Number")])]),v._v(" "),_("li",[_("strong",[v._v("Boolean")])]),v._v(" "),_("li",[_("strong",[v._v("Object")]),v._v("(包含"),_("code",[v._v("Array")]),v._v("、"),_("code",[v._v("Function")]),v._v("、"),_("code",[v._v("Date")]),v._v("、"),_("code",[v._v("RegExp")]),v._v("、"),_("code",[v._v("Error")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("Symbol")])])]),v._v(" "),_("blockquote",[_("p",[v._v("应用场景")])]),v._v(" "),_("ul",[_("li",[v._v("唯一化对象属性名：属性名属于Symbol类型，就都是独一无二的，可保证不会与其他属性名产生冲突")]),v._v(" "),_("li",[v._v("消除魔术字符串：在代码中多次出现且与代码形成强耦合的某一个具体的字符串或数值")]),v._v(" "),_("li",[v._v("遍历属性名：无法通过"),_("code",[v._v("for-in")]),v._v("、"),_("code",[v._v("for-of")]),v._v("、"),_("code",[v._v("Object.keys()")]),v._v("、"),_("code",[v._v("Object.getOwnPropertyNames()")]),v._v("、"),_("code",[v._v("JSON.stringify()")]),v._v("返回，只能通过"),_("code",[v._v("Object.getOwnPropertySymbols")]),v._v("返回")]),v._v(" "),_("li",[v._v("启用模块的Singleton模式：调用一个类在任何时候返回同一个实例("),_("code",[v._v("window")]),v._v("和"),_("code",[v._v("global")]),v._v(")，使用"),_("code",[v._v("Symbol.for()")]),v._v("来模拟全局的"),_("code",[v._v("Singleton模式")])])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("Symbol()")]),v._v("生成一个原始类型的值不是对象，因此"),_("code",[v._v("Symbol()")]),v._v("前不能使用"),_("code",[v._v("new命令")])]),v._v(" "),_("li",[_("code",[v._v("Symbol()")]),v._v("参数表示对当前"),_("code",[v._v("Symbol值")]),v._v("的描述，相同参数的"),_("code",[v._v("Symbol()")]),v._v("返回值不相等")]),v._v(" "),_("li",[_("code",[v._v("Symbol值")]),v._v("不能与其他类型的值进行运算")]),v._v(" "),_("li",[_("code",[v._v("Symbol值")]),v._v("可通过"),_("code",[v._v("String()")]),v._v("或"),_("code",[v._v("toString()")]),v._v("显式转为字符串")]),v._v(" "),_("li",[_("code",[v._v("Symbol值")]),v._v("作为对象属性名时，此属性是公开属性，但不是私有属性")]),v._v(" "),_("li",[_("code",[v._v("Symbol值")]),v._v("作为对象属性名时，只能用方括号运算符("),_("code",[v._v("[]")]),v._v(")读取，不能用点运算符("),_("code",[v._v(".")]),v._v(")读取")]),v._v(" "),_("li",[_("code",[v._v("Symbol值")]),v._v("作为对象属性名时，不会被常规方法遍历得到，可利用此特性为对象定义"),_("code",[v._v("非私有但又只用于内部的方法")])])]),v._v(" "),_("h3",{attrs:{id:"set"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[v._v("#")]),v._v(" Set")]),v._v(" "),_("h5",{attrs:{id:"set-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#set-2"}},[v._v("#")]),v._v(" Set")]),v._v(" "),_("ul",[_("li",[v._v("定义：类似于数组的数据结构，成员值都是唯一且没有重复的值")]),v._v(" "),_("li",[v._v("声明："),_("code",[v._v("const set = new Set(arr)")])]),v._v(" "),_("li",[v._v("入参：具有"),_("code",[v._v("Iterator接口")]),v._v("的数据结构")]),v._v(" "),_("li",[v._v("属性\n"),_("ul",[_("li",[_("strong",[v._v("constructor")]),v._v("：构造函数，返回Set")]),v._v(" "),_("li",[_("strong",[v._v("size")]),v._v("：返回实例成员总数")])])]),v._v(" "),_("li",[v._v("方法\n"),_("ul",[_("li",[_("strong",[v._v("add()")]),v._v("：添加值，返回实例")]),v._v(" "),_("li",[_("strong",[v._v("delete()")]),v._v("：删除值，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("has()")]),v._v("：检查值，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("clear()")]),v._v("：清除所有成员")]),v._v(" "),_("li",[_("strong",[v._v("keys()")]),v._v("：返回以属性值为遍历器的对象")]),v._v(" "),_("li",[_("strong",[v._v("values()")]),v._v("：返回以属性值为遍历器的对象")]),v._v(" "),_("li",[_("strong",[v._v("entries()")]),v._v("：返回以属性值和属性值为遍历器的对象")]),v._v(" "),_("li",[_("strong",[v._v("forEach()")]),v._v("：使用回调函数遍历每个成员")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("应用场景")])]),v._v(" "),_("ul",[_("li",[v._v("去重字符串："),_("code",[v._v('[...new Set(str)].join("")')])]),v._v(" "),_("li",[v._v("去重数组："),_("code",[v._v("[...new Set(arr)]")]),v._v("或"),_("code",[v._v("Array.from(new Set(arr))")])]),v._v(" "),_("li",[v._v("集合数组\n"),_("ul",[_("li",[v._v("声明："),_("code",[v._v("const a = new Set(arr1)")]),v._v("、"),_("code",[v._v("const b = new Set(arr2)")])]),v._v(" "),_("li",[v._v("并集："),_("code",[v._v("new Set([...a, ...b])")])]),v._v(" "),_("li",[v._v("交集："),_("code",[v._v("new Set([...a].filter(v => b.has(v)))")])]),v._v(" "),_("li",[v._v("差集："),_("code",[v._v("new Set([...a].filter(v => !b.has(v)))")])])])]),v._v(" "),_("li",[v._v("映射集合\n"),_("ul",[_("li",[v._v("声明："),_("code",[v._v("let set = new Set(arr)")])]),v._v(" "),_("li",[v._v("映射："),_("code",[v._v("set = new Set([...set].map(v => v * 2))")]),v._v("或"),_("code",[v._v("set = new Set(Array.from(set, v => v * 2))")])])])])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("遍历顺序：插入顺序")]),v._v(" "),_("li",[v._v("没有键只有值，可认为键和值两值相等")]),v._v(" "),_("li",[v._v("添加多个"),_("code",[v._v("NaN")]),v._v("时，只会存在一个"),_("code",[v._v("NaN")])]),v._v(" "),_("li",[v._v("添加相同的对象时，会认为是不同的对象")]),v._v(" "),_("li",[v._v("添加值时不会发生类型转换("),_("code",[v._v('5 !== "5"')]),v._v(")")]),v._v(" "),_("li",[_("code",[v._v("keys()")]),v._v("和"),_("code",[v._v("values()")]),v._v("的行为完全一致，"),_("code",[v._v("entries()")]),v._v("返回的遍历器同时包括键和值且两值相等")])]),v._v(" "),_("h5",{attrs:{id:"weakset"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#weakset"}},[v._v("#")]),v._v(" WeakSet")]),v._v(" "),_("ul",[_("li",[v._v("定义：和Set结构类似，成员值只能是对象")]),v._v(" "),_("li",[v._v("声明："),_("code",[v._v("const set = new WeakSet(arr)")])]),v._v(" "),_("li",[v._v("入参：具有"),_("code",[v._v("Iterator接口")]),v._v("的数据结构")]),v._v(" "),_("li",[v._v("属性\n"),_("ul",[_("li",[_("strong",[v._v("constructor")]),v._v("：构造函数，返回WeakSet")])])]),v._v(" "),_("li",[v._v("方法\n"),_("ul",[_("li",[_("strong",[v._v("add()")]),v._v("：添加值，返回实例")]),v._v(" "),_("li",[_("strong",[v._v("delete()")]),v._v("：删除值，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("has()")]),v._v("：检查值，返回布尔")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("应用场景")])]),v._v(" "),_("ul",[_("li",[v._v("储存DOM节点：DOM节点被移除时自动释放此成员，不用担心这些节点从文档移除时会引发内存泄漏")]),v._v(" "),_("li",[v._v("临时存放一组对象或存放跟对象绑定的信息：只要这些对象在外部消失，它在"),_("code",[v._v("WeakSet结构")]),v._v("中的引用就会自动消")])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("成员都是"),_("code",[v._v("弱引用")]),v._v("，垃圾回收机制不考虑"),_("code",[v._v("WeakSet结构")]),v._v("对此成员的引用")]),v._v(" "),_("li",[v._v("成员不适合引用，它会随时消失，因此ES6规定"),_("code",[v._v("WeakSet结构不可遍历")])]),v._v(" "),_("li",[v._v("其他对象不再引用成员时，垃圾回收机制会自动回收此成员所占用的内存，不考虑此成员是否还存在于"),_("code",[v._v("WeakSet结构")]),v._v("中")])]),v._v(" "),_("h3",{attrs:{id:"map"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[v._v("#")]),v._v(" Map")]),v._v(" "),_("h5",{attrs:{id:"map-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#map-2"}},[v._v("#")]),v._v(" Map")]),v._v(" "),_("ul",[_("li",[v._v("定义：类似于对象的数据结构，成员键是任何类型的值")]),v._v(" "),_("li",[v._v("声明："),_("code",[v._v("const set = new Map(arr)")])]),v._v(" "),_("li",[v._v("入参：具有"),_("code",[v._v("Iterator接口")]),v._v("且每个成员都是一个双元素数组的数据结构")]),v._v(" "),_("li",[v._v("属性\n"),_("ul",[_("li",[_("strong",[v._v("constructor")]),v._v("：构造函数，返回Map")]),v._v(" "),_("li",[_("strong",[v._v("size")]),v._v("：返回实例成员总数")])])]),v._v(" "),_("li",[v._v("方法\n"),_("ul",[_("li",[_("strong",[v._v("get()")]),v._v("：返回键值对")]),v._v(" "),_("li",[_("strong",[v._v("set()")]),v._v("：添加键值对，返回实例")]),v._v(" "),_("li",[_("strong",[v._v("delete()")]),v._v("：删除键值对，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("has()")]),v._v("：检查键值对，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("clear()")]),v._v("：清除所有成员")]),v._v(" "),_("li",[_("strong",[v._v("keys()")]),v._v("：返回以键为遍历器的对象")]),v._v(" "),_("li",[_("strong",[v._v("values()")]),v._v("：返回以值为遍历器的对象")]),v._v(" "),_("li",[_("strong",[v._v("entries()")]),v._v("：返回以键和值为遍历器的对象")]),v._v(" "),_("li",[_("strong",[v._v("forEach()")]),v._v("：使用回调函数遍历每个成员")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("遍历顺序：插入顺序")]),v._v(" "),_("li",[v._v("对同一个键多次赋值，后面的值将覆盖前面的值")]),v._v(" "),_("li",[v._v("对同一个对象的引用，被视为一个键")]),v._v(" "),_("li",[v._v("对同样值的两个实例，被视为两个键")]),v._v(" "),_("li",[v._v("键跟内存地址绑定，只要内存地址不一样就视为两个键")]),v._v(" "),_("li",[v._v("添加多个以"),_("code",[v._v("NaN")]),v._v("作为键时，只会存在一个以"),_("code",[v._v("NaN")]),v._v("作为键的值")]),v._v(" "),_("li",[_("code",[v._v("Object结构")]),v._v("提供"),_("code",[v._v("字符串—值")]),v._v("的对应，"),_("code",[v._v("Map结构")]),v._v("提供"),_("code",[v._v("值—值")]),v._v("的对应")])]),v._v(" "),_("h5",{attrs:{id:"weakmap"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#weakmap"}},[v._v("#")]),v._v(" WeakMap")]),v._v(" "),_("ul",[_("li",[v._v("定义：和Map结构类似，成员键只能是对象")]),v._v(" "),_("li",[v._v("声明："),_("code",[v._v("const set = new WeakMap(arr)")])]),v._v(" "),_("li",[v._v("入参：具有"),_("code",[v._v("Iterator接口")]),v._v("且每个成员都是一个双元素数组的数据结构")]),v._v(" "),_("li",[v._v("属性\n"),_("ul",[_("li",[_("strong",[v._v("constructor")]),v._v("：构造函数，返回WeakMap")])])]),v._v(" "),_("li",[v._v("方法\n"),_("ul",[_("li",[_("strong",[v._v("get()")]),v._v("：返回键值对")]),v._v(" "),_("li",[_("strong",[v._v("set()")]),v._v("：添加键值对，返回实例")]),v._v(" "),_("li",[_("strong",[v._v("delete()")]),v._v("：删除键值对，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("has()")]),v._v("：检查键值对，返回布尔")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("应用场景")])]),v._v(" "),_("ul",[_("li",[v._v("储存DOM节点：DOM节点被移除时自动释放此成员键，不用担心这些节点从文档移除时会引发内存泄漏")]),v._v(" "),_("li",[v._v("部署私有属性：内部属性是实例的弱引用，删除实例时它们也随之消失，不会造成内存泄漏")])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("成员键都是"),_("code",[v._v("弱引用")]),v._v("，垃圾回收机制不考虑"),_("code",[v._v("WeakMap结构")]),v._v("对此成员键的引用")]),v._v(" "),_("li",[v._v("成员键不适合引用，它会随时消失，因此ES6规定"),_("code",[v._v("WeakMap结构不可遍历")])]),v._v(" "),_("li",[v._v("其他对象不再引用成员键时，垃圾回收机制会自动回收此成员所占用的内存，不考虑此成员是否还存在于"),_("code",[v._v("WeakMap结构")]),v._v("中")]),v._v(" "),_("li",[v._v("一旦不再需要，成员会自动消失，不用手动删除引用")]),v._v(" "),_("li",[v._v("弱引用的"),_("code",[v._v("只是键而不是值")]),v._v("，值依然是正常引用")]),v._v(" "),_("li",[v._v("即使在外部消除了成员键的引用，内部的成员值依然存在")])]),v._v(" "),_("h3",{attrs:{id:"proxy"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#proxy"}},[v._v("#")]),v._v(" Proxy")]),v._v(" "),_("ul",[_("li",[v._v("定义：修改某些操作的默认行为")]),v._v(" "),_("li",[v._v("声明："),_("code",[v._v("const proxy = new Proxy(target, handler)")])]),v._v(" "),_("li",[v._v("入参\n"),_("ul",[_("li",[_("strong",[v._v("target")]),v._v("：拦截的目标对象")]),v._v(" "),_("li",[_("strong",[v._v("handler")]),v._v("：定制拦截行为")])])]),v._v(" "),_("li",[v._v("方法\n"),_("ul",[_("li",[_("strong",[v._v("Proxy.revocable()")]),v._v("：返回可取消的Proxy实例(返回"),_("code",[v._v("{ proxy, revoke }")]),v._v("，通过revoke()取消代理)")])])]),v._v(" "),_("li",[v._v("拦截方式\n"),_("ul",[_("li",[_("strong",[v._v("get()")]),v._v("：拦截对象属性读取")]),v._v(" "),_("li",[_("strong",[v._v("set()")]),v._v("：拦截对象属性设置，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("has()")]),v._v("：拦截对象属性检查"),_("code",[v._v("k in obj")]),v._v("，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("deleteProperty()")]),v._v("：拦截对象属性删除"),_("code",[v._v("delete obj[k]")]),v._v("，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("defineProperty()")]),v._v("：拦截对象属性定义"),_("code",[v._v("Object.defineProperty()")]),v._v("、"),_("code",[v._v("Object.defineProperties()")]),v._v("，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("ownKeys()")]),v._v("：拦截对象属性遍历"),_("code",[v._v("for-in")]),v._v("、"),_("code",[v._v("Object.keys()")]),v._v("、"),_("code",[v._v("Object.getOwnPropertyNames()")]),v._v("、"),_("code",[v._v("Object.getOwnPropertySymbols()")]),v._v("，返回数组")]),v._v(" "),_("li",[_("strong",[v._v("getOwnPropertyDescriptor()")]),v._v("：拦截对象属性描述读取"),_("code",[v._v("Object.getOwnPropertyDescriptor()")]),v._v("，返回对象")]),v._v(" "),_("li",[_("strong",[v._v("getPrototypeOf()")]),v._v("：拦截对象原型读取"),_("code",[v._v("instanceof")]),v._v("、"),_("code",[v._v("Object.getPrototypeOf()")]),v._v("、"),_("code",[v._v("Object.prototype.__proto__")]),v._v("、"),_("code",[v._v("Object.prototype.isPrototypeOf()")]),v._v("、"),_("code",[v._v("Reflect.getPrototypeOf()")]),v._v("，返回对象")]),v._v(" "),_("li",[_("strong",[v._v("setPrototypeOf()")]),v._v("：拦截对象原型设置"),_("code",[v._v("Object.setPrototypeOf()")]),v._v("，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("isExtensible()")]),v._v("：拦截对象是否可扩展读取"),_("code",[v._v("Object.isExtensible()")]),v._v("，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("preventExtensions()")]),v._v("：拦截对象不可扩展设置"),_("code",[v._v("Object.preventExtensions()")]),v._v("，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("apply()")]),v._v("：拦截Proxy实例作为函数调用"),_("code",[v._v("proxy()")]),v._v("、"),_("code",[v._v("proxy.apply()")]),v._v("、"),_("code",[v._v("proxy.call()")])]),v._v(" "),_("li",[_("strong",[v._v("construct()")]),v._v("：拦截Proxy实例作为构造函数调用"),_("code",[v._v("new proxy()")])])])])]),v._v(" "),_("blockquote",[_("p",[v._v("应用场景")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("Proxy.revocable()")]),v._v("：不允许直接访问对象，必须通过代理访问，一旦访问结束就收回代理权不允许再次访问")]),v._v(" "),_("li",[_("code",[v._v("get()")]),v._v("：读取未知属性报错、读取数组负数索引的值、封装链式操作、生成DOM嵌套节点")]),v._v(" "),_("li",[_("code",[v._v("set()")]),v._v("：数据绑定(Vue数据绑定实现原理)、确保属性值设置符合要求、防止内部属性被外部读写")]),v._v(" "),_("li",[_("code",[v._v("has()")]),v._v("：隐藏内部属性不被发现、排除不符合属性条件的对象")]),v._v(" "),_("li",[_("code",[v._v("deleteProperty()")]),v._v("：保护内部属性不被删除")]),v._v(" "),_("li",[_("code",[v._v("defineProperty()")]),v._v("：阻止属性被外部定义")]),v._v(" "),_("li",[_("code",[v._v("ownKeys()")]),v._v("：保护内部属性不被遍历")])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("要使"),_("code",[v._v("Proxy")]),v._v("起作用，必须针对"),_("code",[v._v("实例")]),v._v("进行操作，而不是针对"),_("code",[v._v("目标对象")]),v._v("进行操作")]),v._v(" "),_("li",[v._v("没有设置任何拦截时，等同于"),_("code",[v._v("直接通向原对象")])]),v._v(" "),_("li",[v._v("属性被定义为"),_("code",[v._v("不可读写/扩展/配置/枚举")]),v._v("时，使用拦截方法会报错")]),v._v(" "),_("li",[v._v("代理下的目标对象，内部"),_("code",[v._v("this")]),v._v("指向"),_("code",[v._v("Proxy代理")])])]),v._v(" "),_("h3",{attrs:{id:"reflect"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#reflect"}},[v._v("#")]),v._v(" Reflect")]),v._v(" "),_("ul",[_("li",[v._v("定义：保持"),_("code",[v._v("Object方法")]),v._v("的默认行为")]),v._v(" "),_("li",[v._v("方法\n"),_("ul",[_("li",[_("strong",[v._v("get()")]),v._v("：返回对象属性")]),v._v(" "),_("li",[_("strong",[v._v("set()")]),v._v("：设置对象属性，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("has()")]),v._v("：检查对象属性，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("deleteProperty()")]),v._v("：删除对象属性，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("defineProperty()")]),v._v("：定义对象属性，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("ownKeys()")]),v._v("：遍历对象属性，返回数组("),_("code",[v._v("Object.getOwnPropertyNames()")]),v._v("+"),_("code",[v._v("Object.getOwnPropertySymbols()")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("getOwnPropertyDescriptor()")]),v._v("：返回对象属性描述，返回对象")]),v._v(" "),_("li",[_("strong",[v._v("getPrototypeOf()")]),v._v("：返回对象原型，返回对象")]),v._v(" "),_("li",[_("strong",[v._v("setPrototypeOf()")]),v._v("：设置对象原型，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("isExtensible()")]),v._v("：返回对象是否可扩展，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("preventExtensions()")]),v._v("：设置对象不可扩展，返回布尔")]),v._v(" "),_("li",[_("strong",[v._v("apply()")]),v._v("：绑定this后执行指定函数")]),v._v(" "),_("li",[_("strong",[v._v("construct()")]),v._v("：调用构造函数创建实例")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("设计目的")])]),v._v(" "),_("ul",[_("li",[v._v("将"),_("code",[v._v("Object")]),v._v("属于"),_("code",[v._v("语言内部的方法")]),v._v("放到"),_("code",[v._v("Reflect")]),v._v("上")]),v._v(" "),_("li",[v._v("将某些Object方法报错情况改成返回"),_("code",[v._v("false")])]),v._v(" "),_("li",[v._v("让"),_("code",[v._v("Object操作")]),v._v("变成"),_("code",[v._v("函数行为")])]),v._v(" "),_("li",[_("code",[v._v("Proxy")]),v._v("与"),_("code",[v._v("Reflect")]),v._v("相辅相成")])]),v._v(" "),_("blockquote",[_("p",[v._v("废弃方法")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("Object.defineProperty()")]),v._v(" => "),_("code",[v._v("Reflect.defineProperty()")])]),v._v(" "),_("li",[_("code",[v._v("Object.getOwnPropertyDescriptor()")]),v._v(" => "),_("code",[v._v("Reflect.getOwnPropertyDescriptor()")])])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("Proxy方法")]),v._v("和"),_("code",[v._v("Reflect方法")]),v._v("一一对应")]),v._v(" "),_("li",[_("code",[v._v("Proxy")]),v._v("和"),_("code",[v._v("Reflect")]),v._v("联合使用，前者负责"),_("code",[v._v("拦截赋值操作")]),v._v("，后者负责"),_("code",[v._v("完成赋值操作")])])]),v._v(" "),_("blockquote",[_("p",[v._v("数据绑定：观察者模式")])]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" observerQueue "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("new")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("Set")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function-variable function"}},[v._v("observe")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("fn")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" observerQueue"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("add")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("fn"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function-variable function"}},[v._v("observable")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("obj")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("new")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("Proxy")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("obj"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("set")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("tgt"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" key"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" val"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" receiver"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" result "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" Reflect"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("set")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("tgt"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" key"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" val"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" receiver"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        observerQueue"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("forEach")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("v")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("v")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("return")]),v._v(" result"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" person "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("observable")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token literal-property property"}},[v._v("age")]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[v._v("25")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token literal-property property"}},[v._v("name")]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"Yajun"')]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function-variable function"}},[v._v("print")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" console"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token template-string"}},[_("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[v._v("`")]),_("span",{pre:!0,attrs:{class:"token interpolation"}},[_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[v._v("${")]),v._v("person"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("name"),_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[v._v("}")])]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v(" is ")]),_("span",{pre:!0,attrs:{class:"token interpolation"}},[_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[v._v("${")]),v._v("person"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("age"),_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[v._v("}")])]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v(" years old")]),_("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[v._v("`")])]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("observe")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("print"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\nperson"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("name "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"Joway"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n复制代码\n")])])]),_("h3",{attrs:{id:"class"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#class"}},[v._v("#")]),v._v(" Class")]),v._v(" "),_("ul",[_("li",[v._v("定义：对一类具有共同特征的事物的抽象(构造函数语法糖)")]),v._v(" "),_("li",[v._v("原理：类本身指向构造函数，所有方法定义在"),_("code",[v._v("prototype")]),v._v("上，可看作构造函数的另一种写法("),_("code",[v._v("Class === Class.prototype.constructor")]),v._v(")")]),v._v(" "),_("li",[v._v("方法和关键字\n"),_("ul",[_("li",[_("strong",[v._v("constructor()")]),v._v("：构造函数，"),_("code",[v._v("new命令")]),v._v("生成实例时自动调用")]),v._v(" "),_("li",[_("strong",[v._v("extends")]),v._v("：继承父类")]),v._v(" "),_("li",[_("strong",[v._v("super")]),v._v("：新建父类的"),_("code",[v._v("this")])]),v._v(" "),_("li",[_("strong",[v._v("static")]),v._v("：定义静态属性方法")]),v._v(" "),_("li",[_("strong",[v._v("get")]),v._v("：取值函数，拦截属性的取值行为")]),v._v(" "),_("li",[_("strong",[v._v("set")]),v._v("：存值函数，拦截属性的存值行为")])])]),v._v(" "),_("li",[v._v("属性\n"),_("ul",[_("li",[_("strong",[v._v("__proto__")]),v._v("："),_("code",[v._v("构造函数的继承")]),v._v("(总是指向"),_("code",[v._v("父类")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("__proto__.__proto__")]),v._v("：子类的原型的原型，即父类的原型(总是指向父类的"),_("code",[v._v("__proto__")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("prototype.__proto__")]),v._v("："),_("code",[v._v("属性方法的继承")]),v._v("(总是指向父类的"),_("code",[v._v("prototype")]),v._v(")")])])]),v._v(" "),_("li",[v._v("静态属性：定义类完成后赋值属性，该属性"),_("code",[v._v("不会被实例继承")]),v._v("，只能通过类来调用")]),v._v(" "),_("li",[v._v("静态方法：使用"),_("code",[v._v("static")]),v._v("定义方法，该方法"),_("code",[v._v("不会被实例继承")]),v._v("，只能通过类来调用(方法中的"),_("code",[v._v("this")]),v._v("指向类，而不是实例)")]),v._v(" "),_("li",[v._v("继承\n"),_("ul",[_("li",[v._v("实质\n"),_("ul",[_("li",[v._v("ES5实质：先创造子类实例的"),_("code",[v._v("this")]),v._v("，再将父类的属性方法添加到"),_("code",[v._v("this")]),v._v("上("),_("code",[v._v("Parent.apply(this)")]),v._v(")")]),v._v(" "),_("li",[v._v("ES6实质：先将父类实例的属性方法加到"),_("code",[v._v("this")]),v._v("上(调用"),_("code",[v._v("super()")]),v._v(")，再用子类构造函数修改"),_("code",[v._v("this")])])])]),v._v(" "),_("li",[v._v("super\n"),_("ul",[_("li",[v._v("作为函数调用：只能在构造函数中调用"),_("code",[v._v("super()")]),v._v("，内部"),_("code",[v._v("this")]),v._v("指向继承的"),_("code",[v._v("当前子类")]),v._v("("),_("code",[v._v("super()")]),v._v("调用后才可在构造函数中使用"),_("code",[v._v("this")]),v._v(")")]),v._v(" "),_("li",[v._v("作为对象调用：在"),_("code",[v._v("普通方法")]),v._v("中指向"),_("code",[v._v("父类的原型对象")]),v._v("，在"),_("code",[v._v("静态方法")]),v._v("中指向"),_("code",[v._v("父类")])])])]),v._v(" "),_("li",[v._v("显示定义：使用"),_("code",[v._v("constructor() { super(); }")]),v._v("定义继承父类，没有书写则"),_("code",[v._v("显示定义")])]),v._v(" "),_("li",[v._v("子类继承父类：子类使用父类的属性方法时，必须在构造函数中调用"),_("code",[v._v("super()")]),v._v("，否则得不到父类的"),_("code",[v._v("this")]),v._v(" "),_("ul",[_("li",[v._v("父类静态属性方法可被子类继承")]),v._v(" "),_("li",[v._v("子类继承父类后，可从"),_("code",[v._v("super")]),v._v("上调用父类静态属性方法")])])])])]),v._v(" "),_("li",[v._v("实例：类相当于"),_("code",[v._v("实例的原型")]),v._v("，所有在类中定义的属性方法都会被实例继承\n"),_("ul",[_("li",[v._v("显式指定属性方法：使用"),_("code",[v._v("this")]),v._v("指定到自身上(使用"),_("code",[v._v("Class.hasOwnProperty()")]),v._v("可检测到)")]),v._v(" "),_("li",[v._v("隐式指定属性方法：直接声明定义在对象原型上(使用"),_("code",[v._v("Class.__proto__.hasOwnProperty()")]),v._v("可检测到)")])])]),v._v(" "),_("li",[v._v("表达式\n"),_("ul",[_("li",[v._v("类表达式："),_("code",[v._v("const Class = class {}")])]),v._v(" "),_("li",[v._v("name属性：返回紧跟"),_("code",[v._v("class")]),v._v("后的类名")]),v._v(" "),_("li",[v._v("属性表达式："),_("code",[v._v("[prop]")])]),v._v(" "),_("li",[v._v("Generator方法："),_("code",[v._v("* mothod() {}")])]),v._v(" "),_("li",[v._v("Async方法："),_("code",[v._v("async mothod() {}")])])])]),v._v(" "),_("li",[v._v("this指向：解构实例属性或方法时会报错\n"),_("ul",[_("li",[v._v("绑定this："),_("code",[v._v("this.mothod = this.mothod.bind(this)")])]),v._v(" "),_("li",[v._v("箭头函数："),_("code",[v._v("this.mothod = () => this.mothod()")])])])]),v._v(" "),_("li",[v._v("属性定义位置\n"),_("ul",[_("li",[v._v("定义在构造函数中并使用"),_("code",[v._v("this")]),v._v("指向")]),v._v(" "),_("li",[v._v("定义在"),_("code",[v._v("类最顶层")])])])]),v._v(" "),_("li",[_("strong",[v._v("new.target")]),v._v("：确定构造函数是如何调用")])]),v._v(" "),_("blockquote",[_("p",[v._v("原生构造函数")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("String()")])]),v._v(" "),_("li",[_("strong",[v._v("Number()")])]),v._v(" "),_("li",[_("strong",[v._v("Boolean()")])]),v._v(" "),_("li",[_("strong",[v._v("Array()")])]),v._v(" "),_("li",[_("strong",[v._v("Object()")])]),v._v(" "),_("li",[_("strong",[v._v("Function()")])]),v._v(" "),_("li",[_("strong",[v._v("Date()")])]),v._v(" "),_("li",[_("strong",[v._v("RegExp()")])]),v._v(" "),_("li",[_("strong",[v._v("Error()")])])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("在实例上调用方法，实质是调用原型上的方法")]),v._v(" "),_("li",[_("code",[v._v("Object.assign()")]),v._v("可方便地一次向类添加多个方法("),_("code",[v._v("Object.assign(Class.prototype, { ... })")]),v._v(")")]),v._v(" "),_("li",[v._v("类内部所有定义的方法是不可枚举的("),_("code",[v._v("non-enumerable")]),v._v(")")]),v._v(" "),_("li",[v._v("构造函数默认返回实例对象("),_("code",[v._v("this")]),v._v(")，可指定返回另一个对象")]),v._v(" "),_("li",[v._v("取值函数和存值函数设置在属性的"),_("code",[v._v("Descriptor对象")]),v._v("上")]),v._v(" "),_("li",[v._v("类不存在变量提升")]),v._v(" "),_("li",[v._v("利用"),_("code",[v._v("new.target === Class")]),v._v("写出不能独立使用必须继承后才能使用的类")]),v._v(" "),_("li",[v._v("子类继承父类后，"),_("code",[v._v("this")]),v._v("指向子类实例，通过"),_("code",[v._v("super")]),v._v("对某个属性赋值，赋值的属性会变成子类实例的属性")]),v._v(" "),_("li",[v._v("使用"),_("code",[v._v("super")]),v._v("时，必须显式指定是作为函数还是作为对象使用")]),v._v(" "),_("li",[_("code",[v._v("extends")]),v._v("不仅可继承类还可继承原生的构造函数")])]),v._v(" "),_("blockquote",[_("p",[v._v("私有属性方法")])]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" name "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("Symbol")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"name"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" print "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("Symbol")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"print"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("class")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("Person")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("constructor")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("age")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("this")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),v._v("name"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"Bruce"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("this")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("age "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" age"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),v._v("print"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        console"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token template-string"}},[_("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[v._v("`")]),_("span",{pre:!0,attrs:{class:"token interpolation"}},[_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[v._v("${")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("this")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),v._v("name"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[v._v("}")])]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v(" is ")]),_("span",{pre:!0,attrs:{class:"token interpolation"}},[_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[v._v("${")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("this")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("age"),_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[v._v("}")])]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v(" years old")]),_("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[v._v("`")])]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n复制代码\n")])])]),_("blockquote",[_("p",[v._v("继承混合类")])]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("function")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("CopyProperties")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("target"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" source")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("for")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" key "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("of")]),v._v(" Reflect"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("ownKeys")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("source"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("if")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("key "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("!==")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"constructor"')]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("&&")]),v._v(" key "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("!==")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"prototype"')]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("&&")]),v._v(" key "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("!==")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"name"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n            "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" desc "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" Object"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("getOwnPropertyDescriptor")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("source"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" key"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n            Object"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("defineProperty")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("target"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" key"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" desc"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("function")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("MixClass")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("...")]),v._v("mixins")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("class")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("Mix")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("constructor")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n            "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("for")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" mixin "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("of")]),v._v(" mixins"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n                "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("CopyProperties")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("this")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("new")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("mixin")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n            "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("for")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" mixin "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("of")]),v._v(" mixins"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("CopyProperties")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("Mix"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" mixin"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("CopyProperties")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("Mix")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("prototype"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" mixin"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("prototype"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("return")]),v._v(" Mix"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("class")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("Student")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("extends")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("MixClass")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("Person"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" Kid"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n复制代码\n")])])]),_("h3",{attrs:{id:"module"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[v._v("#")]),v._v(" Module")]),v._v(" "),_("ul",[_("li",[v._v("命令\n"),_("ul",[_("li",[_("strong",[v._v("export")]),v._v("：规定模块对外接口\n"),_("ul",[_("li",[_("strong",[v._v("默认导出")]),v._v("："),_("code",[v._v("export default Person")]),v._v("(导入时可指定模块任意名称，无需知晓内部真实名称)")]),v._v(" "),_("li",[_("strong",[v._v("单独导出")]),v._v("："),_("code",[v._v('export const name = "Bruce"')])]),v._v(" "),_("li",[_("strong",[v._v("按需导出")]),v._v("："),_("code",[v._v("export { age, name, sex }")]),v._v("(推荐)")]),v._v(" "),_("li",[_("strong",[v._v("改名导出")]),v._v("："),_("code",[v._v("export { name as newName }")])])])]),v._v(" "),_("li",[_("strong",[v._v("import")]),v._v("：导入模块内部功能\n"),_("ul",[_("li",[_("strong",[v._v("默认导入")]),v._v("："),_("code",[v._v('import Person from "person"')])]),v._v(" "),_("li",[_("strong",[v._v("整体导入")]),v._v("："),_("code",[v._v('import * as Person from "person"')])]),v._v(" "),_("li",[_("strong",[v._v("按需导入")]),v._v("："),_("code",[v._v('import { age, name, sex } from "person"')])]),v._v(" "),_("li",[_("strong",[v._v("改名导入")]),v._v("："),_("code",[v._v('import { name as newName } from "person"')])]),v._v(" "),_("li",[_("strong",[v._v("自执导入")]),v._v("："),_("code",[v._v('import "person"')])]),v._v(" "),_("li",[_("strong",[v._v("复合导入")]),v._v("："),_("code",[v._v('import Person, { name } from "person"')])])])]),v._v(" "),_("li",[_("strong",[v._v("复合模式")]),v._v("："),_("code",[v._v("export命令")]),v._v("和"),_("code",[v._v("import命令")]),v._v("结合在一起写成一行，变量实质没有被导入当前模块，相当于对外转发接口，导致当前模块无法直接使用其导入变量\n"),_("ul",[_("li",[_("strong",[v._v("默认导入导出")]),v._v("："),_("code",[v._v('export { default } from "person"')])]),v._v(" "),_("li",[_("strong",[v._v("整体导入导出")]),v._v("："),_("code",[v._v('export * from "person"')])]),v._v(" "),_("li",[_("strong",[v._v("按需导入导出")]),v._v("："),_("code",[v._v('export { age, name, sex } from "person"')])]),v._v(" "),_("li",[_("strong",[v._v("改名导入导出")]),v._v("："),_("code",[v._v('export { name as newName } from "person"')])]),v._v(" "),_("li",[_("strong",[v._v("具名改默认导入导出")]),v._v("："),_("code",[v._v('export { name as default } from "person"')])]),v._v(" "),_("li",[_("strong",[v._v("默认改具名导入导出")]),v._v("："),_("code",[v._v('export { default as name } from "person"')])])])])])]),v._v(" "),_("li",[v._v("继承："),_("code",[v._v("默认导出")]),v._v("和"),_("code",[v._v("改名导出")]),v._v("结合使用可使模块具备继承性")]),v._v(" "),_("li",[v._v("设计思想：尽量地静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量")]),v._v(" "),_("li",[v._v("严格模式：ES6模块自动采用严格模式(不管模块头部是否添加"),_("code",[v._v("use strict")]),v._v(")")])]),v._v(" "),_("blockquote",[_("p",[v._v("模块方案")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("CommonJS")]),v._v("：用于服务器(动态化依赖)")]),v._v(" "),_("li",[_("strong",[v._v("AMD")]),v._v("：用于浏览器(动态化依赖)")]),v._v(" "),_("li",[_("strong",[v._v("CMD")]),v._v("：用于浏览器(动态化依赖)")]),v._v(" "),_("li",[_("strong",[v._v("UMD")]),v._v("：用于浏览器和服务器(动态化依赖)")]),v._v(" "),_("li",[_("strong",[v._v("ESM")]),v._v("：用于浏览器和服务器(静态化依赖)")])]),v._v(" "),_("blockquote",[_("p",[v._v("加载方式")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("运行时加载")]),v._v(" "),_("ul",[_("li",[v._v("定义：整体加载模块生成一个对象，再从对象上获取需要的属性和方法进行加载(全部加载)")]),v._v(" "),_("li",[v._v("影响：只有运行时才能得到这个对象，导致无法在编译时做静态优化")])])]),v._v(" "),_("li",[_("strong",[v._v("编译时加载")]),v._v(" "),_("ul",[_("li",[v._v("定义：直接从模块中获取需要的属性和方法进行加载(按需加载)")]),v._v(" "),_("li",[v._v("影响：在编译时就完成模块加载，效率比其他方案高，但无法引用模块本身("),_("strong",[v._v("本身不是对象")]),v._v(")，可拓展JS高级语法("),_("strong",[v._v("宏和类型校验")]),v._v(")")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("加载实现")])]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("传统加载")]),v._v("：通过")])]),v._v(" "),_("li",[_("p",[v._v("Defer异步加载：(顺序加载，渲染完再执行)")])]),v._v(" "),_("li",[_("p",[v._v("Async异步加载：(乱序加载，下载完就执行)")])]),v._v(" "),_("li",[_("p",[_("strong",[v._v("模块加载")]),v._v("：(默认是Defer异步加载)")])])]),v._v(" "),_("blockquote",[_("p",[v._v("CommonJS和ESM的区别")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("CommonJS")]),v._v("输出"),_("code",[v._v("值的拷贝")]),v._v("，"),_("code",[v._v("ESM")]),v._v("输出"),_("code",[v._v("值的引用")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("CommonJS")]),v._v("一旦输出一个值，模块内部的变化就影响不到这个值")]),v._v(" "),_("li",[_("code",[v._v("ESM")]),v._v("是动态引用且不会缓存值，模块里的变量绑定其所在的模块，等到脚本真正执行时，再根据这个只读引用到被加载的那个模块里去取值")])])]),v._v(" "),_("li",[_("code",[v._v("CommonJS")]),v._v("是运行时加载，"),_("code",[v._v("ESM")]),v._v("是编译时加载\n"),_("ul",[_("li",[_("code",[v._v("CommonJS")]),v._v("加载模块是对象(即"),_("code",[v._v("module.exports")]),v._v(")，该对象只有在脚本运行完才会生成")]),v._v(" "),_("li",[_("code",[v._v("ESM")]),v._v("加载模块不是对象，它的对外接口只是一种静态定义，在代码静态解析阶段就会生成")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("Node加载")])]),v._v(" "),_("ul",[_("li",[v._v("背景："),_("code",[v._v("CommonJS")]),v._v("和"),_("code",[v._v("ESM")]),v._v("互不兼容，目前解决方案是将两者分开，采用各自的加载方案")]),v._v(" "),_("li",[v._v("区分：要求"),_("code",[v._v("ESM")]),v._v("采用"),_("code",[v._v(".mjs")]),v._v("后缀文件名\n"),_("ul",[_("li",[_("code",[v._v("require()")]),v._v("不能加载"),_("code",[v._v(".mjs文件")]),v._v("，只有"),_("code",[v._v("import命令")]),v._v("才可加载"),_("code",[v._v(".mjs文件")])]),v._v(" "),_("li",[_("code",[v._v(".mjs文件")]),v._v("里不能使用"),_("code",[v._v("require()")]),v._v("，必须使用"),_("code",[v._v("import命令")]),v._v("加载文件")])])]),v._v(" "),_("li",[v._v("驱动："),_("code",[v._v("node --experimental-modules file.mjs")])]),v._v(" "),_("li",[v._v("限制：Node的"),_("code",[v._v("import命令")]),v._v("目前只支持加载本地模块("),_("code",[v._v("file:协议")]),v._v(")，不支持加载远程模块")]),v._v(" "),_("li",[v._v("加载优先级\n"),_("ul",[_("li",[v._v("脚本文件省略后缀名：依次尝试加载四个后缀名文件("),_("code",[v._v(".mjs")]),v._v("、"),_("code",[v._v(".js")]),v._v("、"),_("code",[v._v(".json")]),v._v("、"),_("code",[v._v("node")]),v._v(")")]),v._v(" "),_("li",[v._v("以上不存在：尝试加载"),_("code",[v._v("package.json")]),v._v("的"),_("code",[v._v("main字段")]),v._v("指定的脚本")]),v._v(" "),_("li",[v._v("以上不存在：依次尝试加载名称为"),_("code",[v._v("index")]),v._v("四个后缀名文件("),_("code",[v._v(".mjs")]),v._v("、"),_("code",[v._v(".js")]),v._v("、"),_("code",[v._v(".json")]),v._v("、"),_("code",[v._v("node")]),v._v(")")]),v._v(" "),_("li",[v._v("以上不存在：报错")])])]),v._v(" "),_("li",[v._v("不存在的内部变量："),_("code",[v._v("arguments")]),v._v("、"),_("code",[v._v("exports")]),v._v("、"),_("code",[v._v("module")]),v._v("、"),_("code",[v._v("require")]),v._v("、"),_("code",[v._v("this")]),v._v("、"),_("code",[v._v("__dirname")]),v._v("、"),_("code",[v._v("__filename")])]),v._v(" "),_("li",[v._v("CommonJS加载ESM\n"),_("ul",[_("li",[v._v("不能使用"),_("code",[v._v("require()")]),v._v("，只能使用"),_("code",[v._v("import()")])])])]),v._v(" "),_("li",[v._v("ESM加载CommonJS\n"),_("ul",[_("li",[v._v("自动将"),_("code",[v._v("module.exports")]),v._v("转化成"),_("code",[v._v("export default")])]),v._v(" "),_("li",[_("code",[v._v("CommonJS")]),v._v("输出缓存机制在"),_("code",[v._v("ESM")]),v._v("加载方式下依然有效")]),v._v(" "),_("li",[v._v("采用"),_("code",[v._v("import命令")]),v._v("加载"),_("code",[v._v("CommonJS模块")]),v._v("时，不允许采用"),_("code",[v._v("按需导入")]),v._v("，应使用"),_("code",[v._v("默认导入")]),v._v("或"),_("code",[v._v("整体导入")])])])])]),v._v(" "),_("blockquote",[_("p",[v._v("循环加载")])]),v._v(" "),_("ul",[_("li",[v._v("定义："),_("code",[v._v("脚本A")]),v._v("的执行依赖"),_("code",[v._v("脚本B")]),v._v("，而"),_("code",[v._v("脚本A")]),v._v("的执行又依赖"),_("code",[v._v("脚本B")])]),v._v(" "),_("li",[v._v("加载原理\n"),_("ul",[_("li",[v._v("CommonJS："),_("code",[v._v("require()")]),v._v("首次加载脚本就会执行整个脚本，在内存里生成一个对象缓存下来，二次加载脚本时直接从缓存中获取")]),v._v(" "),_("li",[v._v("ESM："),_("code",[v._v("import命令")]),v._v("加载变量不会被缓存，而是成为一个指向被加载模块的引用")])])]),v._v(" "),_("li",[v._v("循环加载\n"),_("ul",[_("li",[v._v("CommonJS：只输出已经执行的部分，还未执行的部分不会输出")]),v._v(" "),_("li",[v._v("ESM：需开发者自己保证真正取值时能够取到值(可把变量写成函数形式，函数具有提升作用)")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("ES6模块中，顶层"),_("code",[v._v("this")]),v._v("指向"),_("code",[v._v("undefined")]),v._v("，不应该在顶层代码使用"),_("code",[v._v("this")])]),v._v(" "),_("li",[v._v("一个模块就是一个独立的文件，该文件内部的所有变量，外部无法获取")]),v._v(" "),_("li",[_("code",[v._v("export命令")]),v._v("输出的接口与其对应的值是"),_("code",[v._v("动态绑定关系")]),v._v("，即通过该接口可获取模块内部实时的值")]),v._v(" "),_("li",[_("code",[v._v("import命令")]),v._v("大括号里的变量名必须与被导入模块对外接口的名称相同")]),v._v(" "),_("li",[_("code",[v._v("import命令")]),v._v("输入的变量只读(本质是输入接口)，不允许在加载模块的脚本里改写接口")]),v._v(" "),_("li",[_("code",[v._v("import命令")]),v._v("命令具有提升效果，会提升到整个模块的头部，首先执行")]),v._v(" "),_("li",[v._v("重复执行同一句"),_("code",[v._v("import语句")]),v._v("，只会执行一次")]),v._v(" "),_("li",[_("code",[v._v("export default")]),v._v("命令只能使用一次")]),v._v(" "),_("li",[_("code",[v._v("export default命令")]),v._v("导出的整体模块，在执行"),_("code",[v._v("import命令")]),v._v("时其后不能跟"),_("code",[v._v("大括号")])]),v._v(" "),_("li",[_("code",[v._v("export default命令")]),v._v("本质是输出一个名为"),_("code",[v._v("default")]),v._v("的变量，后面不能跟"),_("code",[v._v("变量声明语句")])]),v._v(" "),_("li",[_("code",[v._v("export default命令")]),v._v("本质是将后面的值赋给名为"),_("code",[v._v("default")]),v._v("的变量，可直接将值写在其后")]),v._v(" "),_("li",[_("code",[v._v("export default命令")]),v._v("和"),_("code",[v._v("export {}命令")]),v._v("可同时存在，对应"),_("code",[v._v("复合导入")])]),v._v(" "),_("li",[_("code",[v._v("export命令")]),v._v("和"),_("code",[v._v("import命令")]),v._v("可出现在模块任何位置，只要处于模块顶层即可，不能处于块级作用域")]),v._v(" "),_("li",[_("code",[v._v("import()")]),v._v("加载模块成功后，此模块会作为一个对象，当作"),_("code",[v._v("then()")]),v._v("的参数，可使用"),_("code",[v._v("对象解构赋值")]),v._v("来获取输出接口")]),v._v(" "),_("li",[v._v("同时动态加载多个模块时，可使用"),_("code",[v._v("Promise.all()")]),v._v("和"),_("code",[v._v("import()")]),v._v("相结合来实现")]),v._v(" "),_("li",[_("code",[v._v("import()")]),v._v("和结合"),_("code",[v._v("async/await")]),v._v("来书写同步操作的代码")])]),v._v(" "),_("blockquote",[_("p",[v._v("单例模式：跨模块常量")])]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 常量跨文件共享")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// person.js")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("NAME")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"Bruce"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("AGE")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[v._v("25")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("SEX")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"male"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("export")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("NAME")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("SEX")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n复制代码\n")])])]),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// file1.js")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("import")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("AGE")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("from")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"person"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n复制代码\n")])])]),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// file2.js")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("import")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("NAME")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("SEX")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("from")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"person"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("NAME")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("SEX")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n复制代码\n")])])]),_("blockquote",[_("p",[v._v("默认导入互换整体导入")])]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("import")]),v._v(" Person "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("from")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"person"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("Person"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n复制代码\n")])])]),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("import")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("*")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("as")]),v._v(" Person "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("from")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"person"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("Person"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("default"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token constant"}},[v._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n复制代码\n")])])]),_("h3",{attrs:{id:"iterator"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#iterator"}},[v._v("#")]),v._v(" Iterator")]),v._v(" "),_("ul",[_("li",[v._v("定义：为各种不同的数据结构提供统一的访问机制")]),v._v(" "),_("li",[v._v("原理：创建一个指针指向首个成员，按照次序使用"),_("code",[v._v("next()")]),v._v("指向下一个成员，直接到结束位置(数据结构只要部署"),_("code",[v._v("Iterator接口")]),v._v("就可完成遍历操作)")]),v._v(" "),_("li",[v._v("作用\n"),_("ul",[_("li",[v._v("为各种数据结构提供一个统一的简便的访问接口")]),v._v(" "),_("li",[v._v("使得数据结构成员能够按某种次序排列")]),v._v(" "),_("li",[v._v("ES6创造了新的遍历命令"),_("code",[v._v("for-of")]),v._v("，"),_("code",[v._v("Iterator接口")]),v._v("主要供"),_("code",[v._v("for-of")]),v._v("消费")])])]),v._v(" "),_("li",[v._v("形式："),_("code",[v._v("for-of")]),v._v("(自动去寻找Iterator接口)")]),v._v(" "),_("li",[v._v("数据结构\n"),_("ul",[_("li",[v._v("集合："),_("code",[v._v("Array")]),v._v("、"),_("code",[v._v("Object")]),v._v("、"),_("code",[v._v("Set")]),v._v("、"),_("code",[v._v("Map")])]),v._v(" "),_("li",[v._v("原生具备接口的数据结构："),_("code",[v._v("String")]),v._v("、"),_("code",[v._v("Array")]),v._v("、"),_("code",[v._v("Set")]),v._v("、"),_("code",[v._v("Map")]),v._v("、"),_("code",[v._v("TypedArray")]),v._v("、"),_("code",[v._v("Arguments")]),v._v("、"),_("code",[v._v("NodeList")])])])]),v._v(" "),_("li",[v._v("部署：默认部署在"),_("code",[v._v("Symbol.iterator")]),v._v("(具备此属性被认为"),_("code",[v._v("可遍历的iterable")]),v._v(")")]),v._v(" "),_("li",[v._v("遍历器对象\n"),_("ul",[_("li",[_("strong",[v._v("next()")]),v._v("：下一步操作，返回"),_("code",[v._v("{ done, value }")]),v._v("(必须部署)")]),v._v(" "),_("li",[_("strong",[v._v("return()")]),v._v("："),_("code",[v._v("for-of")]),v._v("提前退出调用，返回"),_("code",[v._v("{ done: true }")])]),v._v(" "),_("li",[_("strong",[v._v("throw()")]),v._v("：不使用，配合"),_("code",[v._v("Generator函数")]),v._v("使用")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("ForOf循环")])]),v._v(" "),_("ul",[_("li",[v._v("定义：调用"),_("code",[v._v("Iterator接口")]),v._v("产生遍历器对象("),_("code",[v._v("for-of")]),v._v("内部调用数据结构的"),_("code",[v._v("Symbol.iterator()")]),v._v(")")]),v._v(" "),_("li",[v._v("遍历字符串："),_("code",[v._v("for-in")]),v._v("获取"),_("code",[v._v("索引")]),v._v("，"),_("code",[v._v("for-of")]),v._v("获取"),_("code",[v._v("值")]),v._v("(可识别32位UTF-16字符)")]),v._v(" "),_("li",[v._v("遍历数组："),_("code",[v._v("for-in")]),v._v("获取"),_("code",[v._v("索引")]),v._v("，"),_("code",[v._v("for-of")]),v._v("获取"),_("code",[v._v("值")])]),v._v(" "),_("li",[v._v("遍历对象："),_("code",[v._v("for-in")]),v._v("获取"),_("code",[v._v("键")]),v._v("，"),_("code",[v._v("for-of")]),v._v("需自行部署")]),v._v(" "),_("li",[v._v("遍历Set："),_("code",[v._v("for-of")]),v._v("获取"),_("code",[v._v("值")]),v._v(" => "),_("code",[v._v("for (const v of set)")])]),v._v(" "),_("li",[v._v("遍历Map："),_("code",[v._v("for-of")]),v._v("获取"),_("code",[v._v("键值对")]),v._v(" => "),_("code",[v._v("for (const [k, v] of map)")])]),v._v(" "),_("li",[v._v("遍历类数组："),_("code",[v._v("包含length的对象")]),v._v("、"),_("code",[v._v("Arguments对象")]),v._v("、"),_("code",[v._v("NodeList对象")]),v._v("(无"),_("code",[v._v("Iterator接口的类数组")]),v._v("可用"),_("code",[v._v("Array.from()")]),v._v("转换)")]),v._v(" "),_("li",[v._v("计算生成数据结构："),_("code",[v._v("Array")]),v._v("、"),_("code",[v._v("Set")]),v._v("、"),_("code",[v._v("Map")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("keys()")]),v._v("：返回遍历器对象，遍历所有的键")]),v._v(" "),_("li",[_("strong",[v._v("values()")]),v._v("：返回遍历器对象，遍历所有的值")]),v._v(" "),_("li",[_("strong",[v._v("entries()")]),v._v("：返回遍历器对象，遍历所有的键值对")])])]),v._v(" "),_("li",[v._v("与"),_("code",[v._v("for-in")]),v._v("区别\n"),_("ul",[_("li",[v._v("有着同"),_("code",[v._v("for-in")]),v._v("一样的简洁语法，但没有"),_("code",[v._v("for-in")]),v._v("那些缺点、")]),v._v(" "),_("li",[v._v("不同于"),_("code",[v._v("forEach()")]),v._v("，它可与"),_("code",[v._v("break")]),v._v("、"),_("code",[v._v("continue")]),v._v("和"),_("code",[v._v("return")]),v._v("配合使用")]),v._v(" "),_("li",[v._v("提供遍历所有数据结构的统一操作接口")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("应用场景")])]),v._v(" "),_("ul",[_("li",[v._v("改写具有"),_("code",[v._v("Iterator接口")]),v._v("的数据结构的"),_("code",[v._v("Symbol.iterator")])]),v._v(" "),_("li",[v._v("解构赋值：对Set进行结构")]),v._v(" "),_("li",[v._v("扩展运算符：将部署"),_("code",[v._v("Iterator接口")]),v._v("的数据结构转为数组")]),v._v(" "),_("li",[v._v("yield*："),_("code",[v._v("yield*")]),v._v("后跟一个可遍历的数据结构，会调用其遍历器接口")]),v._v(" "),_("li",[v._v("接受数组作为参数的函数："),_("code",[v._v("for-of")]),v._v("、"),_("code",[v._v("Array.from()")]),v._v("、"),_("code",[v._v("new Set()")]),v._v("、"),_("code",[v._v("new WeakSet()")]),v._v("、"),_("code",[v._v("new Map()")]),v._v("、"),_("code",[v._v("new WeakMap()")]),v._v("、"),_("code",[v._v("Promise.all()")]),v._v("、"),_("code",[v._v("Promise.race()")])])]),v._v(" "),_("h3",{attrs:{id:"promise"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[v._v("#")]),v._v(" Promise")]),v._v(" "),_("ul",[_("li",[v._v("定义：包含异步操作结果的对象")]),v._v(" "),_("li",[v._v("状态\n"),_("ul",[_("li",[_("strong",[v._v("进行中")]),v._v("："),_("code",[v._v("pending")])]),v._v(" "),_("li",[_("strong",[v._v("已成功")]),v._v("："),_("code",[v._v("resolved")])]),v._v(" "),_("li",[_("strong",[v._v("已失败")]),v._v("："),_("code",[v._v("rejected")])])])]),v._v(" "),_("li",[v._v("特点\n"),_("ul",[_("li",[v._v("对象的状态不受外界影响")]),v._v(" "),_("li",[v._v("一旦状态改变就不会再变，任何时候都可得到这个结果")])])]),v._v(" "),_("li",[v._v("声明："),_("code",[v._v("new Promise((resolve, reject) => {})")])]),v._v(" "),_("li",[v._v("出参\n"),_("ul",[_("li",[_("strong",[v._v("resolve")]),v._v("：将状态从"),_("code",[v._v("未完成")]),v._v("变为"),_("code",[v._v("成功")]),v._v("，在异步操作成功时调用，并将异步操作的结果作为参数传递出去")]),v._v(" "),_("li",[_("strong",[v._v("reject")]),v._v("：将状态从"),_("code",[v._v("未完成")]),v._v("变为"),_("code",[v._v("失败")]),v._v("，在异步操作失败时调用，并将异步操作的错误作为参数传递出去")])])]),v._v(" "),_("li",[v._v("方法\n"),_("ul",[_("li",[_("strong",[v._v("then()")]),v._v("：分别指定"),_("code",[v._v("resolved状态")]),v._v("和"),_("code",[v._v("rejected状态")]),v._v("的回调函数\n"),_("ul",[_("li",[_("strong",[v._v("第一参数")]),v._v("：状态变为"),_("code",[v._v("resolved")]),v._v("时调用")]),v._v(" "),_("li",[_("strong",[v._v("第二参数")]),v._v("：状态变为"),_("code",[v._v("rejected")]),v._v("时调用(可选)")])])]),v._v(" "),_("li",[_("strong",[v._v("catch()")]),v._v("：指定发生错误时的回调函数")]),v._v(" "),_("li",[_("strong",[v._v("Promise.all()")]),v._v("：将多个实例包装成一个新实例，返回全部实例状态变更后的结果数组(齐变更再返回)\n"),_("ul",[_("li",[v._v("入参：具有"),_("code",[v._v("Iterator接口")]),v._v("的数据结构")]),v._v(" "),_("li",[v._v("成功：只有全部实例状态变成"),_("code",[v._v("fulfilled")]),v._v("，最终状态才会变成"),_("code",[v._v("fulfilled")])]),v._v(" "),_("li",[v._v("失败：其中一个实例状态变成"),_("code",[v._v("rejected")]),v._v("，最终状态就会变成"),_("code",[v._v("rejected")])])])]),v._v(" "),_("li",[_("strong",[v._v("Promise.race()")]),v._v("：将多个实例包装成一个新实例，返回全部实例状态优先变更后的结果(先变更先返回)\n"),_("ul",[_("li",[v._v("入参：具有"),_("code",[v._v("Iterator接口")]),v._v("的数据结构")]),v._v(" "),_("li",[v._v("成功失败：哪个实例率先改变状态就返回哪个实例的状态")])])]),v._v(" "),_("li",[_("strong",[v._v("Promise.resolve()")]),v._v("：将对象转为Promise对象(等价于"),_("code",[v._v("new Promise(resolve => resolve())")]),v._v(")\n"),_("ul",[_("li",[_("strong",[v._v("Promise实例")]),v._v("：原封不动地返回入参")]),v._v(" "),_("li",[_("strong",[v._v("Thenable对象")]),v._v("：将此对象转为Promise对象并返回(Thenable为包含"),_("code",[v._v("then()")]),v._v("的对象，执行"),_("code",[v._v("then()")]),v._v("相当于执行此对象的"),_("code",[v._v("then()")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("不具有then()的对象")]),v._v("：将此对象转为Promise对象并返回，状态为"),_("code",[v._v("resolved")])]),v._v(" "),_("li",[_("strong",[v._v("不带参数")]),v._v("：返回Promise对象，状态为"),_("code",[v._v("resolved")])])])]),v._v(" "),_("li",[_("strong",[v._v("Promise.reject()")]),v._v("：将对象转为状态为"),_("code",[v._v("rejected")]),v._v("的Promise对象(等价于"),_("code",[v._v("new Promise((resolve, reject) => reject())")]),v._v(")")])])])]),v._v(" "),_("blockquote",[_("p",[v._v("应用场景")])]),v._v(" "),_("ul",[_("li",[v._v("加载图片")]),v._v(" "),_("li",[v._v("AJAX转Promise对象")])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("只有异步操作的结果可决定当前状态是哪一种，其他操作都无法改变这个状态")]),v._v(" "),_("li",[v._v("状态改变只有两种可能：从"),_("code",[v._v("pending")]),v._v("变为"),_("code",[v._v("resolved")]),v._v("、从"),_("code",[v._v("pending")]),v._v("变为"),_("code",[v._v("rejected")])]),v._v(" "),_("li",[v._v("一旦新建"),_("code",[v._v("Promise对象")]),v._v("就会立即执行，无法中途取消")]),v._v(" "),_("li",[v._v("不设置回调函数，内部抛错不会反应到外部")]),v._v(" "),_("li",[v._v("当处于"),_("code",[v._v("pending")]),v._v("时，无法得知目前进展到哪一个阶段")]),v._v(" "),_("li",[v._v("实例状态变为"),_("code",[v._v("resolved")]),v._v("或"),_("code",[v._v("rejected")]),v._v("时，会触发"),_("code",[v._v("then()")]),v._v("绑定的回调函数")]),v._v(" "),_("li",[_("code",[v._v("resolve()")]),v._v("和"),_("code",[v._v("reject()")]),v._v("的执行总是晚于本轮循环的同步任务")]),v._v(" "),_("li",[_("code",[v._v("then()")]),v._v("返回新实例，其后可再调用另一个"),_("code",[v._v("then()")])]),v._v(" "),_("li",[_("code",[v._v("then()")]),v._v("运行中抛出错误会被"),_("code",[v._v("catch()")]),v._v("捕获")]),v._v(" "),_("li",[_("code",[v._v("reject()")]),v._v("的作用等同于抛出错误")]),v._v(" "),_("li",[v._v("实例状态已变成"),_("code",[v._v("resolved")]),v._v("时，再抛出错误是无效的，不会被捕获，等于没有抛出")]),v._v(" "),_("li",[v._v("实例状态的错误具有"),_("code",[v._v("冒泡")]),v._v("性质，会一直向后传递直到被捕获为止，错误总是会被下一个"),_("code",[v._v("catch()")]),v._v("捕获")]),v._v(" "),_("li",[v._v("不要在"),_("code",[v._v("then()")]),v._v("里定义"),_("code",[v._v("rejected")]),v._v("状态的回调函数(不使用其第二参数)")]),v._v(" "),_("li",[v._v("建议使用"),_("code",[v._v("catch()")]),v._v("捕获错误，不要使用"),_("code",[v._v("then()")]),v._v("第二个参数捕获")]),v._v(" "),_("li",[v._v("没有使用"),_("code",[v._v("catch()")]),v._v("捕获错误，实例抛错不会传递到外层代码，即"),_("code",[v._v("不会有任何反应")])]),v._v(" "),_("li",[v._v("作为参数的实例定义了"),_("code",[v._v("catch()")]),v._v("，一旦被"),_("code",[v._v("rejected")]),v._v("并不会触发"),_("code",[v._v("Promise.all()")]),v._v("的"),_("code",[v._v("catch()")])]),v._v(" "),_("li",[_("code",[v._v("Promise.reject()")]),v._v("的参数会原封不动地作为"),_("code",[v._v("rejected")]),v._v("的理由，变成后续方法的参数")])]),v._v(" "),_("h3",{attrs:{id:"generator"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#generator"}},[v._v("#")]),v._v(" Generator")]),v._v(" "),_("ul",[_("li",[v._v("定义：封装多个内部状态的异步编程解决方案")]),v._v(" "),_("li",[v._v("形式：调用"),_("code",[v._v("Generator函数")]),v._v("(该函数不执行)返回指向内部状态的指针对象(不是运行结果)")]),v._v(" "),_("li",[v._v("声明："),_("code",[v._v("function* Func() {}")])]),v._v(" "),_("li",[v._v("方法\n"),_("ul",[_("li",[_("strong",[v._v("next()")]),v._v("：使指针移向下一个状态，返回"),_("code",[v._v("{ done, value }")]),v._v("(入参会被当作上一个"),_("code",[v._v("yield命令表达式")]),v._v("的返回值)")]),v._v(" "),_("li",[_("strong",[v._v("return()")]),v._v("：返回指定值且终结遍历"),_("code",[v._v("Generator函数")]),v._v("，返回"),_("code",[v._v("{ done: true, value: 入参 }")])]),v._v(" "),_("li",[_("strong",[v._v("throw()")]),v._v("：在"),_("code",[v._v("Generator函数")]),v._v("体外抛出错误，在"),_("code",[v._v("Generator函数")]),v._v("体内捕获错误，返回自定义的"),_("code",[v._v("new Errow()")])])])]),v._v(" "),_("li",[v._v("yield命令：声明内部状态的值("),_("code",[v._v("return")]),v._v("声明结束返回的值)\n"),_("ul",[_("li",[v._v("遇到"),_("code",[v._v("yield命令")]),v._v("就暂停执行后面的操作，并将其后表达式的值作为返回对象的"),_("code",[v._v("value")])]),v._v(" "),_("li",[v._v("下次调用"),_("code",[v._v("next()")]),v._v("时，再继续往下执行直到遇到下一个"),_("code",[v._v("yield命令")])]),v._v(" "),_("li",[v._v("没有再遇到"),_("code",[v._v("yield命令")]),v._v("就一直运行到"),_("code",[v._v("Generator函数")]),v._v("结束，直到遇到"),_("code",[v._v("return语句")]),v._v("为止并将其后表达式的值作为返回对象的"),_("code",[v._v("value")])]),v._v(" "),_("li",[_("code",[v._v("Generator函数")]),v._v("没有"),_("code",[v._v("return语句")]),v._v("则返回对象的"),_("code",[v._v("value")]),v._v("为"),_("code",[v._v("undefined")])])])]),v._v(" "),_("li",[v._v("yield*命令：在一个"),_("code",[v._v("Generator函数")]),v._v("里执行另一个"),_("code",[v._v("Generator函数")]),v._v("(后随具有"),_("code",[v._v("Iterator接口")]),v._v("的数据结构)")]),v._v(" "),_("li",[v._v("遍历：通过"),_("code",[v._v("for-of")]),v._v("自动调用"),_("code",[v._v("next()")])]),v._v(" "),_("li",[v._v("作为对象属性\n"),_("ul",[_("li",[v._v("全写："),_("code",[v._v("const obj = { method: function*() {} }")])]),v._v(" "),_("li",[v._v("简写："),_("code",[v._v("const obj = { * method() {} }")])])])]),v._v(" "),_("li",[v._v("上下文：执行产生的"),_("code",[v._v("上下文环境")]),v._v("一旦遇到"),_("code",[v._v("yield命令")]),v._v("就会暂时退出堆栈(但并不消失)，所有变量和对象会冻结在"),_("code",[v._v("当前状态")]),v._v("，等到对它执行"),_("code",[v._v("next()")]),v._v("时，这个"),_("code",[v._v("上下文环境")]),v._v("又会重新加入调用栈，冻结的变量和对象恢复执行")])]),v._v(" "),_("blockquote",[_("p",[v._v("方法异同")])]),v._v(" "),_("ul",[_("li",[v._v("相同点："),_("code",[v._v("next()")]),v._v("、"),_("code",[v._v("throw()")]),v._v("、"),_("code",[v._v("return()")]),v._v("本质上是同一件事，作用都是让函数恢复执行且使用不同的语句替换"),_("code",[v._v("yield命令")])]),v._v(" "),_("li",[v._v("不同点\n"),_("ul",[_("li",[_("strong",[v._v("next()")]),v._v("：将"),_("code",[v._v("yield命令")]),v._v("替换成一个"),_("code",[v._v("值")])]),v._v(" "),_("li",[_("strong",[v._v("return()")]),v._v("：将"),_("code",[v._v("yield命令")]),v._v("替换成一个"),_("code",[v._v("return语句")])]),v._v(" "),_("li",[_("strong",[v._v("throw()")]),v._v("：将"),_("code",[v._v("yield命令")]),v._v("替换成一个"),_("code",[v._v("throw语句")])])])])]),v._v(" "),_("blockquote",[_("p",[v._v("应用场景")])]),v._v(" "),_("ul",[_("li",[v._v("异步操作同步化表达")]),v._v(" "),_("li",[v._v("控制流管理")]),v._v(" "),_("li",[v._v("为对象部署Iterator接口：把"),_("code",[v._v("Generator函数")]),v._v("赋值给对象的"),_("code",[v._v("Symbol.iterator")]),v._v("，从而使该对象具有"),_("code",[v._v("Iterator接口")])]),v._v(" "),_("li",[v._v("作为具有Iterator接口的数据结构")])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("每次调用"),_("code",[v._v("next()")]),v._v("，指针就从"),_("code",[v._v("函数头部")]),v._v("或"),_("code",[v._v("上次停下的位置")]),v._v("开始执行，直到遇到下一个"),_("code",[v._v("yield命令")]),v._v("或"),_("code",[v._v("return语句")]),v._v("为止")]),v._v(" "),_("li",[v._v("函数内部可不用"),_("code",[v._v("yield命令")]),v._v("，但会变成单纯的"),_("code",[v._v("暂缓执行函数")]),v._v("(还是需要"),_("code",[v._v("next()")]),v._v("触发)")]),v._v(" "),_("li",[_("code",[v._v("yield命令")]),v._v("是暂停执行的标记，"),_("code",[v._v("next()")]),v._v("是恢复执行的操作")]),v._v(" "),_("li",[_("code",[v._v("yield命令")]),v._v("用在另一个表达式中必须放在"),_("code",[v._v("圆括号")]),v._v("里")]),v._v(" "),_("li",[_("code",[v._v("yield命令")]),v._v("用作函数参数或放在赋值表达式的右边，可不加"),_("code",[v._v("圆括号")])]),v._v(" "),_("li",[_("code",[v._v("yield命令")]),v._v("本身没有返回值，可认为是返回"),_("code",[v._v("undefined")])]),v._v(" "),_("li",[_("code",[v._v("yield命令表达式")]),v._v("为惰性求值，等"),_("code",[v._v("next()")]),v._v("执行到此才求值")]),v._v(" "),_("li",[v._v("函数调用后生成遍历器对象，此对象的"),_("code",[v._v("Symbol.iterator")]),v._v("是此对象本身")]),v._v(" "),_("li",[v._v("在函数运行的不同阶段，通过"),_("code",[v._v("next()")]),v._v("从外部向内部注入不同的值，从而调整函数行为")]),v._v(" "),_("li",[v._v("首个"),_("code",[v._v("next()")]),v._v("用来启动遍历器对象，后续才可传递参数")]),v._v(" "),_("li",[v._v("想首次调用"),_("code",[v._v("next()")]),v._v("时就能输入值，可在函数外面再包一层")]),v._v(" "),_("li",[v._v("一旦"),_("code",[v._v("next()")]),v._v("返回对象的"),_("code",[v._v("done")]),v._v("为"),_("code",[v._v("true")]),v._v("，"),_("code",[v._v("for-of")]),v._v("遍历会中止且不包含该返回对象")]),v._v(" "),_("li",[v._v("函数内部部署"),_("code",[v._v("try-finally")]),v._v("且正在执行"),_("code",[v._v("try")]),v._v("，那么"),_("code",[v._v("return()")]),v._v("会导致立刻进入"),_("code",[v._v("finally")]),v._v("，执行完"),_("code",[v._v("finally")]),v._v("以后整个函数才会结束")]),v._v(" "),_("li",[v._v("函数内部没有部署"),_("code",[v._v("try-catch")]),v._v("，"),_("code",[v._v("throw()")]),v._v("抛错将被外部"),_("code",[v._v("try-catch")]),v._v("捕获")]),v._v(" "),_("li",[_("code",[v._v("throw()")]),v._v("抛错要被内部捕获，前提是必须"),_("code",[v._v("至少执行过一次next()")])]),v._v(" "),_("li",[_("code",[v._v("throw()")]),v._v("被捕获以后，会附带执行下一条"),_("code",[v._v("yield命令")])]),v._v(" "),_("li",[v._v("函数还未开始执行，这时"),_("code",[v._v("throw()")]),v._v("抛错只可能抛出在函数外部")])]),v._v(" "),_("blockquote",[_("p",[v._v("首次next()可传值")])]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("function")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("Wrapper")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("func")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("return")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("function")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("...")]),v._v("args")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" generator "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("func")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("...")]),v._v("args"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        generator"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("next")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("return")]),v._v(" generator"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" print "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("Wrapper")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("function")]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("*")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    console"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token template-string"}},[_("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[v._v("`")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v("First Input: ")]),_("span",{pre:!0,attrs:{class:"token interpolation"}},[_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[v._v("${")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("yield")]),_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[v._v("}")])]),_("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[v._v("`")])]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("return")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"done"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("print")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[v._v("next")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"hello"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n复制代码\n")])])]),_("h2",{attrs:{id:"es2016"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es2016"}},[v._v("#")]),v._v(" ES2016")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a8b6131b43a2415e8deb82c53a054432~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image",alt:"ES2016"}})]),v._v(" "),_("h3",{attrs:{id:"数值扩展-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数值扩展-2"}},[v._v("#")]),v._v(" 数值扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("指数运算符(**)")]),v._v("：数值求幂(相当于"),_("code",[v._v("Math.pow()")]),v._v(")")])]),v._v(" "),_("h3",{attrs:{id:"数组扩展-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组扩展-2"}},[v._v("#")]),v._v(" 数组扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("includes()")]),v._v("：是否存在指定成员")])]),v._v(" "),_("h2",{attrs:{id:"es2017"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es2017"}},[v._v("#")]),v._v(" ES2017")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/65ff57811aff4f0e884a9b250fa1b6fb~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image",alt:"ES2017"}})]),v._v(" "),_("h3",{attrs:{id:"声明-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#声明-2"}},[v._v("#")]),v._v(" 声明")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("共享内存和原子操作")]),v._v("：由全局对象"),_("code",[v._v("SharedArrayBuffer")]),v._v("和"),_("code",[v._v("Atomics")]),v._v("实现，将数据存储在一块共享内存空间中，这些数据可在"),_("code",[v._v("JS主线程")]),v._v("和"),_("code",[v._v("web-worker线程")]),v._v("之间共享")])]),v._v(" "),_("h3",{attrs:{id:"字符串扩展-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串扩展-2"}},[v._v("#")]),v._v(" 字符串扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("padStart()")]),v._v("：把指定字符串填充到字符串头部，返回新字符串")]),v._v(" "),_("li",[_("strong",[v._v("padEnd()")]),v._v("：把指定字符串填充到字符串尾部，返回新字符串")])]),v._v(" "),_("h3",{attrs:{id:"对象扩展-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象扩展-2"}},[v._v("#")]),v._v(" 对象扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("Object.getOwnPropertyDescriptors()")]),v._v("：返回对象所有自身属性(非继承属性)的描述对象")]),v._v(" "),_("li",[_("strong",[v._v("Object.values()")]),v._v("：返回以值组成的数组")]),v._v(" "),_("li",[_("strong",[v._v("Object.entries()")]),v._v("：返回以键和值组成的数组")])]),v._v(" "),_("h3",{attrs:{id:"函数扩展-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数扩展-2"}},[v._v("#")]),v._v(" 函数扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("函数参数尾逗号")]),v._v("：允许函数最后一个参数有尾逗号")])]),v._v(" "),_("h3",{attrs:{id:"async"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#async"}},[v._v("#")]),v._v(" Async")]),v._v(" "),_("ul",[_("li",[v._v("定义：使异步函数以同步函数的形式书写(Generator函数语法糖)")]),v._v(" "),_("li",[v._v("原理：将"),_("code",[v._v("Generator函数")]),v._v("和自动执行器"),_("code",[v._v("spawn")]),v._v("包装在一个函数里")]),v._v(" "),_("li",[v._v("形式：将"),_("code",[v._v("Generator函数")]),v._v("的"),_("code",[v._v("*")]),v._v("替换成"),_("code",[v._v("async")]),v._v("，将"),_("code",[v._v("yield")]),v._v("替换成"),_("code",[v._v("await")])]),v._v(" "),_("li",[v._v("声明\n"),_("ul",[_("li",[v._v("具名函数："),_("code",[v._v("async function Func() {}")])]),v._v(" "),_("li",[v._v("函数表达式："),_("code",[v._v("const func = async function() {}")])]),v._v(" "),_("li",[v._v("箭头函数："),_("code",[v._v("const func = async() => {}")])]),v._v(" "),_("li",[v._v("对象方法："),_("code",[v._v("const obj = { async func() {} }")])]),v._v(" "),_("li",[v._v("类方法："),_("code",[v._v("class Cla { async Func() {} }")])])])]),v._v(" "),_("li",[v._v("await命令：等待当前Promise对象状态变更完毕\n"),_("ul",[_("li",[v._v("正常情况：后面是Promise对象则返回其结果，否则返回对应的值")]),v._v(" "),_("li",[v._v("后随"),_("code",[v._v("Thenable对象")]),v._v("：将其等同于Promise对象返回其结果")])])]),v._v(" "),_("li",[v._v("错误处理：将"),_("code",[v._v("await命令Promise对象")]),v._v("放到"),_("code",[v._v("try-catch")]),v._v("中(可放多个)")])]),v._v(" "),_("blockquote",[_("p",[v._v("Async对Generator改进")])]),v._v(" "),_("ul",[_("li",[v._v("内置执行器")]),v._v(" "),_("li",[v._v("更好的语义")]),v._v(" "),_("li",[v._v("更广的适用性")]),v._v(" "),_("li",[v._v("返回值是Promise对象")])]),v._v(" "),_("blockquote",[_("p",[v._v("应用场景")])]),v._v(" "),_("ul",[_("li",[v._v("按顺序完成异步操作")])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[_("code",[v._v("Async函数")]),v._v("返回"),_("code",[v._v("Promise对象")]),v._v("，可使用"),_("code",[v._v("then()")]),v._v("添加回调函数")]),v._v(" "),_("li",[v._v("内部"),_("code",[v._v("return返回值")]),v._v("会成为后续"),_("code",[v._v("then()")]),v._v("的出参")]),v._v(" "),_("li",[v._v("内部抛出错误会导致返回的Promise对象变为"),_("code",[v._v("rejected状态")]),v._v("，被"),_("code",[v._v("catch()")]),v._v("接收到")]),v._v(" "),_("li",[v._v("返回的Promise对象必须等到内部所有"),_("code",[v._v("await命令Promise对象")]),v._v("执行完才会发生状态改变，除非遇到"),_("code",[v._v("return语句")]),v._v("或"),_("code",[v._v("抛出错误")])]),v._v(" "),_("li",[v._v("任何一个"),_("code",[v._v("await命令Promise对象")]),v._v("变为"),_("code",[v._v("rejected状态")]),v._v("，整个"),_("code",[v._v("Async函数")]),v._v("都会中断执行")]),v._v(" "),_("li",[v._v("希望即使前一个异步操作失败也不要中断后面的异步操作\n"),_("ul",[_("li",[v._v("将"),_("code",[v._v("await命令Promise对象")]),v._v("放到"),_("code",[v._v("try-catch")]),v._v("中")]),v._v(" "),_("li",[_("code",[v._v("await命令Promise对象")]),v._v("跟一个"),_("code",[v._v("catch()")])])])]),v._v(" "),_("li",[_("code",[v._v("await命令Promise对象")]),v._v("可能变为"),_("code",[v._v("rejected状态")]),v._v("，最好把其放到"),_("code",[v._v("try-catch")]),v._v("中")]),v._v(" "),_("li",[v._v("多个"),_("code",[v._v("await命令Promise对象")]),v._v("若不存在继发关系，最好让它们同时触发")]),v._v(" "),_("li",[_("code",[v._v("await命令")]),v._v("只能用在"),_("code",[v._v("Async函数")]),v._v("之中，否则会报错")]),v._v(" "),_("li",[v._v("数组使用"),_("code",[v._v("forEach()")]),v._v("执行"),_("code",[v._v("async/await")]),v._v("会失效，可使用"),_("code",[v._v("for-of")]),v._v("和"),_("code",[v._v("Promise.all()")]),v._v("代替")]),v._v(" "),_("li",[v._v("可保留运行堆栈，函数上下文随着"),_("code",[v._v("Async函数")]),v._v("的执行而存在，执行完成就消失")])]),v._v(" "),_("h2",{attrs:{id:"es2018"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es2018"}},[v._v("#")]),v._v(" ES2018")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5ee2ee331aa642c49fc3119bdf3eb974~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image",alt:"ES2018"}})]),v._v(" "),_("h3",{attrs:{id:"字符串扩展-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串扩展-3"}},[v._v("#")]),v._v(" 字符串扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("放松对标签模板里字符串转义的限制")]),v._v("：遇到不合法的字符串转义返回"),_("code",[v._v("undefined")]),v._v("，并且从"),_("code",[v._v("raw")]),v._v("上可获取原字符串")])]),v._v(" "),_("h3",{attrs:{id:"对象扩展-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象扩展-3"}},[v._v("#")]),v._v(" 对象扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("扩展运算符(...)")]),v._v("：转换对象为用逗号分隔的参数序列("),_("code",[v._v("{ ...obj }")]),v._v("，相当于"),_("code",[v._v("rest/spread参数")]),v._v("的逆运算)")])]),v._v(" "),_("blockquote",[_("p",[v._v("扩展应用")])]),v._v(" "),_("ul",[_("li",[v._v("克隆对象："),_("code",[v._v("const obj = { __proto__: Object.getPrototypeOf(obj1), ...obj1 }")])]),v._v(" "),_("li",[v._v("合并对象："),_("code",[v._v("const obj = { ...obj1, ...obj2 }")])]),v._v(" "),_("li",[v._v("转换字符串为对象："),_("code",[v._v('{ ..."hello" }')])]),v._v(" "),_("li",[v._v("转换数组为对象："),_("code",[v._v("{ ...[1, 2] }")])]),v._v(" "),_("li",[v._v("与对象解构赋值结合："),_("code",[v._v("const { x, ...rest/spread } = { x: 1, y: 2, z: 3 }")]),v._v("(不能复制继承自原型对象的属性)")]),v._v(" "),_("li",[v._v("修改现有对象部分属性："),_("code",[v._v("const obj = { x: 1, ...{ x: 2 } }")])])]),v._v(" "),_("h3",{attrs:{id:"正则扩展-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正则扩展-2"}},[v._v("#")]),v._v(" 正则扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("s修饰符")]),v._v("：dotAll模式修饰符，使"),_("code",[v._v(".")]),v._v("匹配任意单个字符("),_("code",[v._v("dotAll模式")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("dotAll")]),v._v("：是否设置"),_("code",[v._v("s修饰符")])]),v._v(" "),_("li",[_("strong",[v._v("后行断言")]),v._v("："),_("code",[v._v("x")]),v._v("只有在"),_("code",[v._v("y")]),v._v("后才匹配")]),v._v(" "),_("li",[_("strong",[v._v("后行否定断言")]),v._v("："),_("code",[v._v("x")]),v._v("只有不在"),_("code",[v._v("y")]),v._v("后才匹配")]),v._v(" "),_("li",[_("strong",[v._v("Unicode属性转义")]),v._v("：匹配符合"),_("code",[v._v("Unicode某种属性")]),v._v("的所有字符")]),v._v(" "),_("li",[v._v("正向匹配："),_("code",[v._v("\\p{PropRule}")])]),v._v(" "),_("li",[v._v("反向匹配："),_("code",[v._v("\\P{PropRule}")])]),v._v(" "),_("li",[v._v("限制："),_("code",[v._v("\\p{...}")]),v._v("和"),_("code",[v._v("\\P{...}")]),v._v("只对"),_("code",[v._v("Unicode字符")]),v._v("有效，使用时需加上"),_("code",[v._v("u修饰符")])]),v._v(" "),_("li",[_("strong",[v._v("具名组匹配")]),v._v("：为每组匹配指定名字("),_("code",[v._v("?")]),v._v(")")]),v._v(" "),_("li",[v._v("形式："),_("code",[v._v("str.exec().groups.GroupName")])]),v._v(" "),_("li",[v._v("解构赋值替换\n"),_("ul",[_("li",[v._v("声明："),_("code",[v._v('const time = "2017-09-11"')]),v._v("、"),_("code",[v._v("const regexp = /(?\\d{4})-(?\\d{2})-(?\\d{2})/u")])]),v._v(" "),_("li",[v._v("匹配："),_("code",[v._v('time.replace(regexp, "$/$/$")')])])])])]),v._v(" "),_("h3",{attrs:{id:"promise-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise-2"}},[v._v("#")]),v._v(" Promise")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("finally()")]),v._v("：指定不管最后状态如何都会执行的回调函数")])]),v._v(" "),_("h3",{attrs:{id:"async-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#async-2"}},[v._v("#")]),v._v(" Async")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("异步迭代器(for-await-of)")]),v._v("：循环等待每个"),_("code",[v._v("Promise对象")]),v._v("变为"),_("code",[v._v("resolved状态")]),v._v("才进入下一步")])]),v._v(" "),_("h2",{attrs:{id:"es2019"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es2019"}},[v._v("#")]),v._v(" ES2019")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9ae43118d7ef4e1eb9b3aac7b0f89777~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image",alt:"ES2019"}})]),v._v(" "),_("h3",{attrs:{id:"字符串扩展-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串扩展-4"}},[v._v("#")]),v._v(" 字符串扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("直接输入U+2028和U+2029")]),v._v("：字符串可直接输入"),_("code",[v._v("行分隔符")]),v._v("和"),_("code",[v._v("段分隔符")])]),v._v(" "),_("li",[_("strong",[v._v("JSON.stringify()改造")]),v._v("：可返回不符合UTF-8标准的字符串")]),v._v(" "),_("li",[_("strong",[v._v("trimStart()")]),v._v("：消除字符串头部空格，返回新字符串")]),v._v(" "),_("li",[_("strong",[v._v("trimEnd()")]),v._v("：消除字符串尾部空格，返回新字符串")])]),v._v(" "),_("h3",{attrs:{id:"对象扩展-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象扩展-4"}},[v._v("#")]),v._v(" 对象扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("Object.fromEntries()")]),v._v("：返回以键和值组成的对象("),_("code",[v._v("Object.entries()")]),v._v("的逆操作)")])]),v._v(" "),_("h3",{attrs:{id:"数组扩展-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组扩展-3"}},[v._v("#")]),v._v(" 数组扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("sort()稳定性")]),v._v("：排序关键字相同的项目其排序前后的顺序不变，默认为"),_("code",[v._v("稳定")])]),v._v(" "),_("li",[_("strong",[v._v("flat()")]),v._v("：扁平化数组，返回新数组")]),v._v(" "),_("li",[_("strong",[v._v("flatMap()")]),v._v("：映射且扁平化数组，返回新数组(只能展开一层数组)")])]),v._v(" "),_("h3",{attrs:{id:"函数扩展-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数扩展-3"}},[v._v("#")]),v._v(" 函数扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("toString()改造")]),v._v("：返回函数原始代码(与编码一致)")]),v._v(" "),_("li",[_("strong",[v._v("catch()参数可省略")]),v._v("："),_("code",[v._v("catch()")]),v._v("中的参数可省略")])]),v._v(" "),_("h3",{attrs:{id:"symbol-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#symbol-2"}},[v._v("#")]),v._v(" Symbol")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("description")]),v._v("：返回"),_("code",[v._v("Symbol值")]),v._v("的描述")])]),v._v(" "),_("h2",{attrs:{id:"es2020"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es2020"}},[v._v("#")]),v._v(" ES2020")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4762da8a25d242eb82da69576b05b035~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image",alt:"ES2020"}})]),v._v(" "),_("h3",{attrs:{id:"声明-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#声明-3"}},[v._v("#")]),v._v(" 声明")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("globalThis")]),v._v("：作为顶层对象，指向全局环境下的"),_("code",[v._v("this")])]),v._v(" "),_("li",[v._v("Browser：顶层对象是"),_("code",[v._v("window")])]),v._v(" "),_("li",[v._v("Node：顶层对象是"),_("code",[v._v("global")])]),v._v(" "),_("li",[v._v("WebWorker：顶层对象是"),_("code",[v._v("self")])]),v._v(" "),_("li",[v._v("以上三者：通用顶层对象是"),_("code",[v._v("globalThis")])])]),v._v(" "),_("h3",{attrs:{id:"数值扩展-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数值扩展-3"}},[v._v("#")]),v._v(" 数值扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("BigInt")]),v._v("：任何位数的整数(新增的数据类型，使用"),_("code",[v._v("n")]),v._v("结尾)")]),v._v(" "),_("li",[_("strong",[v._v("BigInt()")]),v._v("：转换普通数值为BigInt类型")]),v._v(" "),_("li",[_("strong",[v._v("BigInt.asUintN()")]),v._v("：转换BigInt为0到2n-1之间对应的值")]),v._v(" "),_("li",[_("strong",[v._v("BigInt.asIntN()")]),v._v("：转换BigInt为-2n-1 到2n-1-1")]),v._v(" "),_("li",[_("strong",[v._v("BigInt.parseInt()")]),v._v("：近似于"),_("code",[v._v("Number.parseInt()")]),v._v("，将一个字符串转换成指定进制的BigInt类型")])]),v._v(" "),_("blockquote",[_("p",[v._v("重点难点")])]),v._v(" "),_("ul",[_("li",[v._v("BigInt同样可使用各种进制表示，都要加上后缀")]),v._v(" "),_("li",[v._v("BigInt与普通整数是两种值，它们之间并不相等")]),v._v(" "),_("li",[v._v("typeof运算符对于BigInt类型的数据返回"),_("code",[v._v("bigint")])])]),v._v(" "),_("h3",{attrs:{id:"对象扩展-5"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象扩展-5"}},[v._v("#")]),v._v(" 对象扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("链判断操作符(?.)")]),v._v("：是否存在对象属性(不存在返回"),_("code",[v._v("undefined")]),v._v("且不再往下执行)")]),v._v(" "),_("li",[v._v("对象属性："),_("code",[v._v("obj?.prop")]),v._v("、"),_("code",[v._v("obj?.[expr]")])]),v._v(" "),_("li",[v._v("函数调用："),_("code",[v._v("func?.(...args)")])]),v._v(" "),_("li",[_("strong",[v._v("空判断操作符(??)")]),v._v("：是否值为"),_("code",[v._v("undefined")]),v._v("或"),_("code",[v._v("null")]),v._v("，是则使用默认值")])]),v._v(" "),_("h3",{attrs:{id:"正则扩展-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正则扩展-3"}},[v._v("#")]),v._v(" 正则扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("matchAll()")]),v._v("：返回所有匹配的遍历器")])]),v._v(" "),_("h3",{attrs:{id:"module-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#module-2"}},[v._v("#")]),v._v(" Module")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("import()")]),v._v("：动态导入(返回"),_("code",[v._v("Promise")]),v._v(")")]),v._v(" "),_("li",[v._v("背景："),_("code",[v._v("import命令")]),v._v("被JS引擎静态分析，先于模块内的其他语句执行，无法取代"),_("code",[v._v("require()")]),v._v("的动态加载功能，提案建议引入"),_("code",[v._v("import()")]),v._v("来代替"),_("code",[v._v("require()")])]),v._v(" "),_("li",[v._v("位置：可在任何地方使用")]),v._v(" "),_("li",[v._v("区别："),_("code",[v._v("require()")]),v._v("是"),_("strong",[v._v("同步加载")]),v._v("，"),_("code",[v._v("import()")]),v._v("是"),_("strong",[v._v("异步加载")])]),v._v(" "),_("li",[v._v("场景：按需加载、条件加载、模块路径动态化")])]),v._v(" "),_("h3",{attrs:{id:"iterator-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#iterator-2"}},[v._v("#")]),v._v(" Iterator")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("for-in遍历顺序")]),v._v("：不同的引擎已就如何迭代属性达成一致，从而使行为标准化")])]),v._v(" "),_("h3",{attrs:{id:"promise-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise-3"}},[v._v("#")]),v._v(" Promise")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("Promise.allSettled()")]),v._v("：将多个实例包装成一个新实例，返回全部实例状态变更后的状态数组(齐变更再返回)")]),v._v(" "),_("li",[v._v("入参：具有"),_("code",[v._v("Iterator接口")]),v._v("的数据结构")]),v._v(" "),_("li",[v._v("成功：成员包含"),_("code",[v._v("status")]),v._v("和"),_("code",[v._v("value")]),v._v("，"),_("code",[v._v("status")]),v._v("为"),_("code",[v._v("fulfilled")]),v._v("，"),_("code",[v._v("value")]),v._v("为返回值")]),v._v(" "),_("li",[v._v("失败：成员包含"),_("code",[v._v("status")]),v._v("和"),_("code",[v._v("reason")]),v._v("，"),_("code",[v._v("status")]),v._v("为"),_("code",[v._v("rejected")]),v._v("，"),_("code",[v._v("value")]),v._v("为错误原因")])]),v._v(" "),_("h2",{attrs:{id:"es提案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es提案"}},[v._v("#")]),v._v(" ES提案")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/68085d653c054f68a496cb158496ed8b~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.image",alt:"ES提案"}})]),v._v(" "),_("h3",{attrs:{id:"声明-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#声明-4"}},[v._v("#")]),v._v(" 声明")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("do表达式")]),v._v("：封装块级作用域的操作，返回内部最后执行表达式的值("),_("code",[v._v("do{}")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("throw表达式")]),v._v("：直接使用"),_("code",[v._v("throw new Error()")]),v._v("，无需"),_("code",[v._v("()")]),v._v("或"),_("code",[v._v("{}")]),v._v("包括")]),v._v(" "),_("li",[_("strong",[v._v("!#命令")]),v._v("：指定脚本执行器(写在文件首行)")])]),v._v(" "),_("h3",{attrs:{id:"数值扩展-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数值扩展-4"}},[v._v("#")]),v._v(" 数值扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("数值分隔符(_)")]),v._v("：使用"),_("code",[v._v("_")]),v._v("作为千分位分隔符(增加数值的可读性)")]),v._v(" "),_("li",[_("strong",[v._v("Math.signbit()")]),v._v("：返回数值符号是否设置")])]),v._v(" "),_("h3",{attrs:{id:"函数扩展-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数扩展-4"}},[v._v("#")]),v._v(" 函数扩展")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("函数部分执行")]),v._v("：复用函数功能("),_("code",[v._v("?")]),v._v("表示单个参数占位符，"),_("code",[v._v("...")]),v._v("表示多个参数占位符)")]),v._v(" "),_("li",[_("strong",[v._v("管道操作符(|>)")]),v._v("：把左边表达式的值传入右边的函数进行求值("),_("code",[v._v("f(x)")]),v._v(" => "),_("code",[v._v("x |> f")]),v._v(")")]),v._v(" "),_("li",[_("strong",[v._v("绑定运算符(:😃")]),v._v("：函数绑定(左边是对象右边是函数，取代"),_("code",[v._v("bind")]),v._v("、"),_("code",[v._v("apply")]),v._v("、"),_("code",[v._v("call")]),v._v("调用)")]),v._v(" "),_("li",[v._v("bind："),_("code",[v._v("bar.bind(foo)")]),v._v(" => "),_("code",[v._v("foo::bar")])]),v._v(" "),_("li",[v._v("apply："),_("code",[v._v("bar.apply(foo, arguments)")]),v._v(" => "),_("code",[v._v("foo::bar(...arguments)")])])]),v._v(" "),_("h3",{attrs:{id:"realm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#realm"}},[v._v("#")]),v._v(" Realm")]),v._v(" "),_("ul",[_("li",[v._v("定义：提供"),_("code",[v._v("沙箱功能")]),v._v("，允许隔离代码，防止被隔离的代码拿到全局对象")]),v._v(" "),_("li",[v._v("声明："),_("code",[v._v("new Realm().global")])])]),v._v(" "),_("h3",{attrs:{id:"class-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#class-2"}},[v._v("#")]),v._v(" Class")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("静态属性")]),v._v("：使用"),_("code",[v._v("static")]),v._v("定义属性，该属性"),_("code",[v._v("不会被实例继承")]),v._v("，只能通过类来调用")]),v._v(" "),_("li",[_("strong",[v._v("私有属性")]),v._v("：使用"),_("code",[v._v("#")]),v._v("定义属性，该属性只能在类内部访问")]),v._v(" "),_("li",[_("strong",[v._v("私有方法")]),v._v("：使用"),_("code",[v._v("#")]),v._v("定义方法，该方法只能在类内部访问")]),v._v(" "),_("li",[_("strong",[v._v("装饰器")]),v._v("：使用"),_("code",[v._v("@")]),v._v("注释或修改类和类方法")])]),v._v(" "),_("h3",{attrs:{id:"module-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#module-3"}},[v._v("#")]),v._v(" Module")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("import.meta")]),v._v("：返回脚本元信息")])]),v._v(" "),_("h3",{attrs:{id:"promise-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise-4"}},[v._v("#")]),v._v(" Promise")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("Promise.any()")]),v._v("：将多个实例包装成一个新实例，返回全部实例状态变更后的结果数组(齐变更再返回)")]),v._v(" "),_("li",[v._v("入参：具有"),_("code",[v._v("Iterator接口")]),v._v("的数据结构")]),v._v(" "),_("li",[v._v("成功：其中一个实例状态变成"),_("code",[v._v("fulfilled")]),v._v("，最终状态就会变成"),_("code",[v._v("fulfilled")])]),v._v(" "),_("li",[v._v("失败：只有全部实例状态变成"),_("code",[v._v("rejected")]),v._v("，最终状态才会变成"),_("code",[v._v("rejected")])]),v._v(" "),_("li",[_("strong",[v._v("Promise.try()")]),v._v("：不想区分是否同步异步函数，包装函数为实例，使用"),_("code",[v._v("then()")]),v._v("指定下一步流程，使用"),_("code",[v._v("catch()")]),v._v("捕获错误")])]),v._v(" "),_("h3",{attrs:{id:"async-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#async-3"}},[v._v("#")]),v._v(" Async")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("顶层Await")]),v._v("：允许在模块的顶层独立使用"),_("code",[v._v("await命令")]),v._v("(借用"),_("code",[v._v("await")]),v._v("解决模块异步加载的问题)")])]),v._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("p",[v._v("最后送大家一张完整的ES6特性图，记得给我"),_("strong",[v._v("点个赞")]),v._v("喔，算是对我的一种鼓励。因为图片实在太大无法上传，请关注"),_("code",[v._v("IQ前端")]),v._v("或扫描"),_("code",[v._v("文章底部二维码")]),v._v("，后台回复"),_("code",[v._v("ES6")]),v._v("，获取高清的ES6全部特性记忆图，助你轻松记住"),_("strong",[v._v("ES6全部特性")]),v._v("。")]),v._v(" "),_("h3",{attrs:{id:"结语"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[v._v("#")]),v._v(" 结语")]),v._v(" "),_("p",[_("strong",[v._v("❤️关注+点赞+收藏+评论+转发❤️")]),v._v("，原创不易，鼓励笔者创作更多高质量文章")]),v._v(" "),_("p",[_("strong",[v._v("关注公众号"),_("code",[v._v("IQ前端")]),v._v("，一个专注于CSS/JS开发技巧的前端公众号，更多前端小干货等着你喔")])]),v._v(" "),_("ul",[_("li",[v._v("关注后回复"),_("code",[v._v("资料")]),v._v("免费领取学习资料")]),v._v(" "),_("li",[v._v("关注后回复"),_("code",[v._v("进群")]),v._v("拉你进技术交流群")]),v._v(" "),_("li",[v._v("欢迎关注"),_("code",[v._v("IQ前端")]),v._v("，更多"),_("strong",[v._v("CSS/JS开发技巧")]),v._v("只在公众号推送")])]),v._v(" "),_("p",[_("img",{attrs:{src:"https://yangzw.vip/static/frontend/account/IQ%E5%89%8D%E7%AB%AF%E5%85%AC%E4%BC%97%E5%8F%B7.jpg",alt:""}})])])}),[],!1,null,null,null);_.default=o.exports}}]);