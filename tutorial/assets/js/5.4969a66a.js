(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{248:function(t,r,a){"use strict";a.r(r);var n=a(249),e=a.n(n);for(var o in n)["default"].indexOf(o)<0&&function(t){a.d(r,t,(function(){return n[t]}))}(o);r.default=e.a},249:function(t,r){},328:function(t,r,a){"use strict";a.d(r,"a",(function(){return n})),a.d(r,"b",(function(){return e}));var n=function(){var t=this,r=t._self._c;t._self._setupProxy;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_5-其他"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-其他"}},[t._v("#")]),t._v(" 5 其他")]),t._v(" "),r("h1",{attrs:{id:"jquery-noconflict-方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jquery-noconflict-方法"}},[t._v("#")]),t._v(" jQuery - noConflict() 方法")]),t._v(" "),r("hr"),t._v(" "),r("p",[t._v("如何在页面上同时使用 jQuery 和其他框架？")]),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"jquery-和其他-javascript-框架"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jquery-和其他-javascript-框架"}},[t._v("#")]),t._v(" jQuery 和其他 JavaScript 框架")]),t._v(" "),r("p",[t._v("正如您已经了解到的，jQuery 使用 $ 符号作为 jQuery 的简写。")]),t._v(" "),r("p",[t._v("如果其他 JavaScript 框架也使用 $ 符号作为简写怎么办？")]),t._v(" "),r("p",[t._v("其他一些 JavaScript 框架包括：MooTools、Backbone、Sammy、Cappuccino、Knockout、JavaScript MVC、Google Web Toolkit、Google Closure、Ember、Batman 以及 Ext JS。")]),t._v(" "),r("p",[t._v("其中某些框架也使用 $ 符号作为简写（就像 jQuery），如果您在用的两种不同的框架正在使用相同的简写符号，有可能导致脚本停止运行。")]),t._v(" "),r("p",[t._v("jQuery 的团队考虑到了这个问题，并实现了 noConflict() 方法。")]),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"jquery-noconflict-方法-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jquery-noconflict-方法-2"}},[t._v("#")]),t._v(" jQuery noConflict() 方法")]),t._v(" "),r("p",[t._v("noConflict() 方法会释放对 $ 标识符的控制，这样其他脚本就可以使用它了。")]),t._v(" "),r("p",[t._v("当然，您仍然可以通过全名替代简写的方式来使用 jQuery：")]),t._v(" "),r("h2",{attrs:{id:"实例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),r("p",[t._v('$.noConflict(); jQuery(document).ready(function(){ jQuery("button").click(function(){ jQuery("p").text("jQuery 仍然在工作!"); }); });')]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.runoob.com/try/try.php?filename=tryjquery_noconflict",target:"_blank",rel:"noopener noreferrer"}},[t._v("尝试一下 »"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("您也可以创建自己的简写。noConflict() 可返回对 jQuery 的引用，您可以把它存入变量，以供稍后使用。请看这个例子：")]),t._v(" "),r("h2",{attrs:{id:"实例-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实例-2"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),r("p",[t._v('var jq = $.noConflict(); jq(document).ready(function(){ jq("button").click(function(){ jq("p").text("jQuery 仍然在工作!"); }); });')]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.runoob.com/try/try.php?filename=tryjquery_noconflict2",target:"_blank",rel:"noopener noreferrer"}},[t._v("尝试一下 »"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v('如果你的 jQuery 代码块使用 $ 简写，并且您不愿意改变这个快捷方式，那么您可以把 $ 符号作为变量传递给 ready 方法。这样就可以在函数内使用 $ 符号了 - 而在函数外，依旧不得不使用 "jQuery"：')]),t._v(" "),r("h2",{attrs:{id:"实例-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实例-3"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),r("p",[t._v('$.noConflict(); jQuery(document).ready(function($){ $("button").click(function(){ $("p").text("jQuery 仍然在工作!"); }); });')]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.runoob.com/try/try.php?filename=tryjquery_noconflict3",target:"_blank",rel:"noopener noreferrer"}},[t._v("尝试一下 »"),r("OutboundLink")],1)]),t._v(" "),r("h1",{attrs:{id:"jsonp-教程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jsonp-教程"}},[t._v("#")]),t._v(" JSONP 教程")]),t._v(" "),r("p",[t._v("本章节我们将向大家介绍 JSONP 的知识。")]),t._v(" "),r("p",[t._v('Jsonp(JSON with Padding) 是 json 的一种"使用模式"，可以让网页从别的域名（网站）那获取资料，即跨域读取数据。')]),t._v(" "),r("p",[t._v("为什么我们从不同的域（网站）访问数据需要一个特殊的技术( JSONP )呢？这是因为同源策略。")]),t._v(" "),r("p",[t._v("同源策略，它是由 Netscape 提出的一个著名的安全策略，现在所有支持 JavaScript 的浏览器都会使用这个策略。")]),t._v(" "),r("hr"),t._v(" "),r("h2",{attrs:{id:"jsonp-应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jsonp-应用"}},[t._v("#")]),t._v(" JSONP 应用")]),t._v(" "),r("h3",{attrs:{id:"_1-服务端-jsonp-格式数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-服务端-jsonp-格式数据"}},[t._v("#")]),t._v(" 1. 服务端 JSONP 格式数据")]),t._v(" "),r("p",[t._v("如客户想访问 : "),r("strong",[t._v("https://www.runoob.com/try/ajax/jsonp.php?jsoncallback=callbackFunction")]),t._v("。")]),t._v(" "),r("p",[t._v('假设客户期望返回数据：["customername1","customername2"]。')]),t._v(" "),r("p",[t._v('真正返回到客户端的数据显示为: callbackFunction(["customername1","customername2"])。')]),t._v(" "),r("p",[t._v("服务端文件 jsonp.php 代码为：")]),t._v(" "),r("h2",{attrs:{id:"jsonp-php-文件代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jsonp-php-文件代码"}},[t._v("#")]),t._v(" jsonp.php 文件代码")]),t._v(" "),r("p",[t._v('header(\'Content-type: application/json\'); //获取回调函数名 $jsoncallback = htmlspecialchars($_REQUEST [\'jsoncallback\']); //json数据 $json_data = \'["customername1","customername2"]\'; //输出jsonp格式的数据 echo $jsoncallback . "(" . $json_data . ")"; ?>')]),t._v(" "),r("h3",{attrs:{id:"_2-客户端实现-callbackfunction-函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-客户端实现-callbackfunction-函数"}},[t._v("#")]),t._v(" 2. 客户端实现 callbackFunction 函数")])])},e=[]},330:function(t,r,a){"use strict";a.r(r);var n=a(328),e=a(248);for(var o in e)["default"].indexOf(o)<0&&function(t){a.d(r,t,(function(){return e[t]}))}(o);var c=a(15),s=Object(c.a)(e.default,n.a,n.b,!1,null,null,null);r.default=s.exports}}]);